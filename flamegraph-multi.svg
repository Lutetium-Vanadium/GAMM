<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="885.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="885.00"> </text><svg id="frames" x="10" width="1180" total_samples="31720"><g><title>nalgebra::geometry::reflection::Reflection&lt;T,D,S&gt;::reflect_with_sign (4 samples, 0.01%)</title><rect x="0.0032%" y="805" width="0.0126%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="4"/><text x="0.2532%" y="815.50"></text></g><g><title>[anon] (6 samples, 0.02%)</title><rect x="0.0000%" y="821" width="0.0189%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="6"/><text x="0.2500%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.02%)</title><rect x="0.0189%" y="821" width="0.0221%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="7"/><text x="0.2689%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="0.0599%" y="565" width="0.0221%" height="15" fill="rgb(248,212,6)" fg:x="19" fg:w="7"/><text x="0.3099%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7 samples, 0.02%)</title><rect x="0.0599%" y="549" width="0.0221%" height="15" fill="rgb(208,68,35)" fg:x="19" fg:w="7"/><text x="0.3099%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="0.0599%" y="533" width="0.0221%" height="15" fill="rgb(232,128,0)" fg:x="19" fg:w="7"/><text x="0.3099%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7 samples, 0.02%)</title><rect x="0.0599%" y="517" width="0.0221%" height="15" fill="rgb(207,160,47)" fg:x="19" fg:w="7"/><text x="0.3099%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="0.0599%" y="501" width="0.0221%" height="15" fill="rgb(228,23,34)" fg:x="19" fg:w="7"/><text x="0.3099%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="0.0599%" y="485" width="0.0221%" height="15" fill="rgb(218,30,26)" fg:x="19" fg:w="7"/><text x="0.3099%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (7 samples, 0.02%)</title><rect x="0.0599%" y="469" width="0.0221%" height="15" fill="rgb(220,122,19)" fg:x="19" fg:w="7"/><text x="0.3099%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (7 samples, 0.02%)</title><rect x="0.0599%" y="453" width="0.0221%" height="15" fill="rgb(250,228,42)" fg:x="19" fg:w="7"/><text x="0.3099%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.02%)</title><rect x="0.0599%" y="437" width="0.0221%" height="15" fill="rgb(240,193,28)" fg:x="19" fg:w="7"/><text x="0.3099%" y="447.50"></text></g><g><title>gamm::basic_multi::beta_coocurring_reduction::{{closure}} (7 samples, 0.02%)</title><rect x="0.0599%" y="421" width="0.0221%" height="15" fill="rgb(216,20,37)" fg:x="19" fg:w="7"/><text x="0.3099%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.02%)</title><rect x="0.0631%" y="405" width="0.0189%" height="15" fill="rgb(206,188,39)" fg:x="20" fg:w="6"/><text x="0.3131%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.02%)</title><rect x="0.0631%" y="389" width="0.0189%" height="15" fill="rgb(217,207,13)" fg:x="20" fg:w="6"/><text x="0.3131%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.03%)</title><rect x="0.1986%" y="549" width="0.0252%" height="15" fill="rgb(231,73,38)" fg:x="63" fg:w="8"/><text x="0.4486%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.03%)</title><rect x="0.1986%" y="533" width="0.0252%" height="15" fill="rgb(225,20,46)" fg:x="63" fg:w="8"/><text x="0.4486%" y="543.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1,703 samples, 5.37%)</title><rect x="1.7276%" y="485" width="5.3689%" height="15" fill="rgb(210,31,41)" fg:x="548" fg:w="1703"/><text x="1.9776%" y="495.50">&lt;f32 as..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (2,227 samples, 7.02%)</title><rect x="0.2238%" y="549" width="7.0208%" height="15" fill="rgb(221,200,47)" fg:x="71" fg:w="2227"/><text x="0.4738%" y="559.50">nalgebra:..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (2,227 samples, 7.02%)</title><rect x="0.2238%" y="533" width="7.0208%" height="15" fill="rgb(226,26,5)" fg:x="71" fg:w="2227"/><text x="0.4738%" y="543.50">nalgebra:..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (2,227 samples, 7.02%)</title><rect x="0.2238%" y="517" width="7.0208%" height="15" fill="rgb(249,33,26)" fg:x="71" fg:w="2227"/><text x="0.4738%" y="527.50">nalgebra:..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (2,227 samples, 7.02%)</title><rect x="0.2238%" y="501" width="7.0208%" height="15" fill="rgb(235,183,28)" fg:x="71" fg:w="2227"/><text x="0.4738%" y="511.50">nalgebra:..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (47 samples, 0.15%)</title><rect x="7.0965%" y="485" width="0.1482%" height="15" fill="rgb(221,5,38)" fg:x="2251" fg:w="47"/><text x="7.3465%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (47 samples, 0.15%)</title><rect x="7.0965%" y="469" width="0.1482%" height="15" fill="rgb(247,18,42)" fg:x="2251" fg:w="47"/><text x="7.3465%" y="479.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (33 samples, 0.10%)</title><rect x="7.1406%" y="453" width="0.1040%" height="15" fill="rgb(241,131,45)" fg:x="2265" fg:w="33"/><text x="7.3906%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (33 samples, 0.10%)</title><rect x="7.1406%" y="437" width="0.1040%" height="15" fill="rgb(249,31,29)" fg:x="2265" fg:w="33"/><text x="7.3906%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (15 samples, 0.05%)</title><rect x="14.0227%" y="517" width="0.0473%" height="15" fill="rgb(225,111,53)" fg:x="4448" fg:w="15"/><text x="14.2727%" y="527.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (4,248 samples, 13.39%)</title><rect x="14.0700%" y="517" width="13.3922%" height="15" fill="rgb(238,160,17)" fg:x="4463" fg:w="4248"/><text x="14.3200%" y="527.50">&lt;f32 as core::ops::a..</text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (976 samples, 3.08%)</title><rect x="27.4622%" y="517" width="3.0769%" height="15" fill="rgb(214,148,48)" fg:x="8711" fg:w="976"/><text x="27.7122%" y="527.50">&lt;f3..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (7,395 samples, 23.31%)</title><rect x="7.2446%" y="549" width="23.3134%" height="15" fill="rgb(232,36,49)" fg:x="2298" fg:w="7395"/><text x="7.4946%" y="559.50">nalgebra::base::blas::&lt;impl nalgebra:..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (7,395 samples, 23.31%)</title><rect x="7.2446%" y="533" width="23.3134%" height="15" fill="rgb(209,103,24)" fg:x="2298" fg:w="7395"/><text x="7.4946%" y="543.50">nalgebra::base::blas::&lt;impl nalgebra:..</text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked (6 samples, 0.02%)</title><rect x="30.5391%" y="517" width="0.0189%" height="15" fill="rgb(229,88,8)" fg:x="9687" fg:w="6"/><text x="30.7891%" y="527.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (6 samples, 0.02%)</title><rect x="30.5391%" y="501" width="0.0189%" height="15" fill="rgb(213,181,19)" fg:x="9687" fg:w="6"/><text x="30.7891%" y="511.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (6 samples, 0.02%)</title><rect x="30.5391%" y="485" width="0.0189%" height="15" fill="rgb(254,191,54)" fg:x="9687" fg:w="6"/><text x="30.7891%" y="495.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked_linear (6 samples, 0.02%)</title><rect x="30.5391%" y="469" width="0.0189%" height="15" fill="rgb(241,83,37)" fg:x="9687" fg:w="6"/><text x="30.7891%" y="479.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked_linear (6 samples, 0.02%)</title><rect x="30.5391%" y="453" width="0.0189%" height="15" fill="rgb(233,36,39)" fg:x="9687" fg:w="6"/><text x="30.7891%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (6 samples, 0.02%)</title><rect x="30.5391%" y="437" width="0.0189%" height="15" fill="rgb(226,3,54)" fg:x="9687" fg:w="6"/><text x="30.7891%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (6 samples, 0.02%)</title><rect x="30.5391%" y="421" width="0.0189%" height="15" fill="rgb(245,192,40)" fg:x="9687" fg:w="6"/><text x="30.7891%" y="431.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut (24 samples, 0.08%)</title><rect x="30.5580%" y="549" width="0.0757%" height="15" fill="rgb(238,167,29)" fg:x="9693" fg:w="24"/><text x="30.8080%" y="559.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::apply (24 samples, 0.08%)</title><rect x="30.5580%" y="533" width="0.0757%" height="15" fill="rgb(232,182,51)" fg:x="9693" fg:w="24"/><text x="30.8080%" y="543.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut::{{closure}} (24 samples, 0.08%)</title><rect x="30.5580%" y="517" width="0.0757%" height="15" fill="rgb(231,60,39)" fg:x="9693" fg:w="24"/><text x="30.8080%" y="527.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_unscale (20 samples, 0.06%)</title><rect x="30.5706%" y="501" width="0.0631%" height="15" fill="rgb(208,69,12)" fg:x="9697" fg:w="20"/><text x="30.8206%" y="511.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::unscale (20 samples, 0.06%)</title><rect x="30.5706%" y="485" width="0.0631%" height="15" fill="rgb(235,93,37)" fg:x="9697" fg:w="20"/><text x="30.8206%" y="495.50"></text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::columns_range_pair_mut (10 samples, 0.03%)</title><rect x="30.6368%" y="549" width="0.0315%" height="15" fill="rgb(213,116,39)" fg:x="9718" fg:w="10"/><text x="30.8868%" y="559.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (10 samples, 0.03%)</title><rect x="30.6368%" y="533" width="0.0315%" height="15" fill="rgb(222,207,29)" fg:x="9718" fg:w="10"/><text x="30.8868%" y="543.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_linear_mut (9 samples, 0.03%)</title><rect x="30.6400%" y="517" width="0.0284%" height="15" fill="rgb(206,96,30)" fg:x="9719" fg:w="9"/><text x="30.8900%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (9 samples, 0.03%)</title><rect x="30.6400%" y="501" width="0.0284%" height="15" fill="rgb(218,138,4)" fg:x="9719" fg:w="9"/><text x="30.8900%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (9 samples, 0.03%)</title><rect x="30.6400%" y="485" width="0.0284%" height="15" fill="rgb(250,191,14)" fg:x="9719" fg:w="9"/><text x="30.8900%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (13 samples, 0.04%)</title><rect x="30.6841%" y="485" width="0.0410%" height="15" fill="rgb(239,60,40)" fg:x="9733" fg:w="13"/><text x="30.9341%" y="495.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (20 samples, 0.06%)</title><rect x="30.6683%" y="549" width="0.0631%" height="15" fill="rgb(206,27,48)" fg:x="9728" fg:w="20"/><text x="30.9183%" y="559.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (19 samples, 0.06%)</title><rect x="30.6715%" y="533" width="0.0599%" height="15" fill="rgb(225,35,8)" fg:x="9729" fg:w="19"/><text x="30.9215%" y="543.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (19 samples, 0.06%)</title><rect x="30.6715%" y="517" width="0.0599%" height="15" fill="rgb(250,213,24)" fg:x="9729" fg:w="19"/><text x="30.9215%" y="527.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (19 samples, 0.06%)</title><rect x="30.6715%" y="501" width="0.0599%" height="15" fill="rgb(247,123,22)" fg:x="9729" fg:w="19"/><text x="30.9215%" y="511.50"></text></g><g><title>gamm::common::qr (9,730 samples, 30.67%)</title><rect x="0.0914%" y="565" width="30.6747%" height="15" fill="rgb(231,138,38)" fg:x="29" fg:w="9730"/><text x="0.3414%" y="575.50">gamm::common::qr</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::IndexMut&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index_mut (11 samples, 0.03%)</title><rect x="30.7314%" y="549" width="0.0347%" height="15" fill="rgb(231,145,46)" fg:x="9748" fg:w="11"/><text x="30.9814%" y="559.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (6 samples, 0.02%)</title><rect x="30.7472%" y="533" width="0.0189%" height="15" fill="rgb(251,118,11)" fg:x="9753" fg:w="6"/><text x="30.9972%" y="543.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndexMut&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (6 samples, 0.02%)</title><rect x="30.7472%" y="517" width="0.0189%" height="15" fill="rgb(217,147,25)" fg:x="9753" fg:w="6"/><text x="30.9972%" y="527.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_unchecked_mut (6 samples, 0.02%)</title><rect x="30.7472%" y="501" width="0.0189%" height="15" fill="rgb(247,81,37)" fg:x="9753" fg:w="6"/><text x="30.9972%" y="511.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (6 samples, 0.02%)</title><rect x="30.7472%" y="485" width="0.0189%" height="15" fill="rgb(209,12,38)" fg:x="9753" fg:w="6"/><text x="30.9972%" y="495.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (6 samples, 0.02%)</title><rect x="30.7472%" y="469" width="0.0189%" height="15" fill="rgb(227,1,9)" fg:x="9753" fg:w="6"/><text x="30.9972%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (79 samples, 0.25%)</title><rect x="30.7661%" y="421" width="0.2491%" height="15" fill="rgb(248,47,43)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (79 samples, 0.25%)</title><rect x="30.7661%" y="405" width="0.2491%" height="15" fill="rgb(221,10,30)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (79 samples, 0.25%)</title><rect x="30.7661%" y="389" width="0.2491%" height="15" fill="rgb(210,229,1)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (79 samples, 0.25%)</title><rect x="30.7661%" y="373" width="0.2491%" height="15" fill="rgb(222,148,37)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (79 samples, 0.25%)</title><rect x="30.7661%" y="357" width="0.2491%" height="15" fill="rgb(234,67,33)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (79 samples, 0.25%)</title><rect x="30.7661%" y="341" width="0.2491%" height="15" fill="rgb(247,98,35)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="351.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (79 samples, 0.25%)</title><rect x="30.7661%" y="325" width="0.2491%" height="15" fill="rgb(247,138,52)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="335.50"></text></g><g><title>core::ops::function::Fn::call (79 samples, 0.25%)</title><rect x="30.7661%" y="309" width="0.2491%" height="15" fill="rgb(213,79,30)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="319.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (79 samples, 0.25%)</title><rect x="30.7661%" y="293" width="0.2491%" height="15" fill="rgb(246,177,23)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (79 samples, 0.25%)</title><rect x="30.7661%" y="277" width="0.2491%" height="15" fill="rgb(230,62,27)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (79 samples, 0.25%)</title><rect x="30.7661%" y="261" width="0.2491%" height="15" fill="rgb(216,154,8)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="271.50"></text></g><g><title>core::ptr::write (79 samples, 0.25%)</title><rect x="30.7661%" y="245" width="0.2491%" height="15" fill="rgb(244,35,45)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="255.50"></text></g><g><title>[libc.so.6] (79 samples, 0.25%)</title><rect x="30.7661%" y="229" width="0.2491%" height="15" fill="rgb(251,115,12)" fg:x="9759" fg:w="79"/><text x="31.0161%" y="239.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;&gt;::Buffer&gt;&gt;::zeros (90 samples, 0.28%)</title><rect x="30.7661%" y="565" width="0.2837%" height="15" fill="rgb(240,54,50)" fg:x="9759" fg:w="90"/><text x="31.0161%" y="575.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::zeros_generic (90 samples, 0.28%)</title><rect x="30.7661%" y="549" width="0.2837%" height="15" fill="rgb(233,84,52)" fg:x="9759" fg:w="90"/><text x="31.0161%" y="559.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_element_generic (90 samples, 0.28%)</title><rect x="30.7661%" y="533" width="0.2837%" height="15" fill="rgb(207,117,47)" fg:x="9759" fg:w="90"/><text x="31.0161%" y="543.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_iterator_generic (90 samples, 0.28%)</title><rect x="30.7661%" y="517" width="0.2837%" height="15" fill="rgb(249,43,39)" fg:x="9759" fg:w="90"/><text x="31.0161%" y="527.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;::allocate_from_iterator (90 samples, 0.28%)</title><rect x="30.7661%" y="501" width="0.2837%" height="15" fill="rgb(209,38,44)" fg:x="9759" fg:w="90"/><text x="31.0161%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (90 samples, 0.28%)</title><rect x="30.7661%" y="485" width="0.2837%" height="15" fill="rgb(236,212,23)" fg:x="9759" fg:w="90"/><text x="31.0161%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (90 samples, 0.28%)</title><rect x="30.7661%" y="469" width="0.2837%" height="15" fill="rgb(242,79,21)" fg:x="9759" fg:w="90"/><text x="31.0161%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (90 samples, 0.28%)</title><rect x="30.7661%" y="453" width="0.2837%" height="15" fill="rgb(211,96,35)" fg:x="9759" fg:w="90"/><text x="31.0161%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (90 samples, 0.28%)</title><rect x="30.7661%" y="437" width="0.2837%" height="15" fill="rgb(253,215,40)" fg:x="9759" fg:w="90"/><text x="31.0161%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.03%)</title><rect x="31.0151%" y="421" width="0.0347%" height="15" fill="rgb(211,81,21)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="31.0151%" y="405" width="0.0347%" height="15" fill="rgb(208,190,38)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="31.0151%" y="389" width="0.0347%" height="15" fill="rgb(235,213,38)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.03%)</title><rect x="31.0151%" y="373" width="0.0347%" height="15" fill="rgb(237,122,38)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.03%)</title><rect x="31.0151%" y="357" width="0.0347%" height="15" fill="rgb(244,218,35)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.03%)</title><rect x="31.0151%" y="341" width="0.0347%" height="15" fill="rgb(240,68,47)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="351.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.03%)</title><rect x="31.0151%" y="325" width="0.0347%" height="15" fill="rgb(210,16,53)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="335.50"></text></g><g><title>malloc (11 samples, 0.03%)</title><rect x="31.0151%" y="309" width="0.0347%" height="15" fill="rgb(235,124,12)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="319.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="31.0151%" y="293" width="0.0347%" height="15" fill="rgb(224,169,11)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="303.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="31.0151%" y="277" width="0.0347%" height="15" fill="rgb(250,166,2)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="287.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="31.0151%" y="261" width="0.0347%" height="15" fill="rgb(242,216,29)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="271.50"></text></g><g><title>__mmap (11 samples, 0.03%)</title><rect x="31.0151%" y="245" width="0.0347%" height="15" fill="rgb(230,116,27)" fg:x="9838" fg:w="11"/><text x="31.2651%" y="255.50"></text></g><g><title>nalgebra::base::edition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::set_column (23 samples, 0.07%)</title><rect x="31.0498%" y="565" width="0.0725%" height="15" fill="rgb(228,99,48)" fg:x="9849" fg:w="23"/><text x="31.2998%" y="575.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::copy_from (23 samples, 0.07%)</title><rect x="31.0498%" y="549" width="0.0725%" height="15" fill="rgb(253,11,6)" fg:x="9849" fg:w="23"/><text x="31.2998%" y="559.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;::transpose_mut (12 samples, 0.04%)</title><rect x="31.1223%" y="565" width="0.0378%" height="15" fill="rgb(247,143,39)" fg:x="9872" fg:w="12"/><text x="31.3723%" y="575.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::swap_unchecked (10 samples, 0.03%)</title><rect x="31.1286%" y="549" width="0.0315%" height="15" fill="rgb(236,97,10)" fg:x="9874" fg:w="10"/><text x="31.3786%" y="559.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked (10 samples, 0.03%)</title><rect x="31.1286%" y="533" width="0.0315%" height="15" fill="rgb(233,208,19)" fg:x="9874" fg:w="10"/><text x="31.3786%" y="543.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked_linear (10 samples, 0.03%)</title><rect x="31.1286%" y="517" width="0.0315%" height="15" fill="rgb(216,164,2)" fg:x="9874" fg:w="10"/><text x="31.3786%" y="527.50"></text></g><g><title>core::ptr::swap (10 samples, 0.03%)</title><rect x="31.1286%" y="501" width="0.0315%" height="15" fill="rgb(220,129,5)" fg:x="9874" fg:w="10"/><text x="31.3786%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="31.1381%" y="485" width="0.0221%" height="15" fill="rgb(242,17,10)" fg:x="9877" fg:w="7"/><text x="31.3881%" y="495.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (183 samples, 0.58%)</title><rect x="31.5605%" y="405" width="0.5769%" height="15" fill="rgb(242,107,0)" fg:x="10011" fg:w="183"/><text x="31.8105%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (256 samples, 0.81%)</title><rect x="31.5605%" y="421" width="0.8071%" height="15" fill="rgb(251,28,31)" fg:x="10011" fg:w="256"/><text x="31.8105%" y="431.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (73 samples, 0.23%)</title><rect x="32.1375%" y="405" width="0.2301%" height="15" fill="rgb(233,223,10)" fg:x="10194" fg:w="73"/><text x="32.3875%" y="415.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::clone_owned (451 samples, 1.42%)</title><rect x="31.1602%" y="565" width="1.4218%" height="15" fill="rgb(215,21,27)" fg:x="9884" fg:w="451"/><text x="31.4102%" y="575.50"></text></g><g><title>&lt;nalgebra::base::matrix_slice::SliceStorageMut&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::clone_owned (451 samples, 1.42%)</title><rect x="31.1602%" y="549" width="1.4218%" height="15" fill="rgb(232,23,21)" fg:x="9884" fg:w="451"/><text x="31.4102%" y="559.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;::allocate_from_iterator (451 samples, 1.42%)</title><rect x="31.1602%" y="533" width="1.4218%" height="15" fill="rgb(244,5,23)" fg:x="9884" fg:w="451"/><text x="31.4102%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (451 samples, 1.42%)</title><rect x="31.1602%" y="517" width="1.4218%" height="15" fill="rgb(226,81,46)" fg:x="9884" fg:w="451"/><text x="31.4102%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (451 samples, 1.42%)</title><rect x="31.1602%" y="501" width="1.4218%" height="15" fill="rgb(247,70,30)" fg:x="9884" fg:w="451"/><text x="31.4102%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (451 samples, 1.42%)</title><rect x="31.1602%" y="485" width="1.4218%" height="15" fill="rgb(212,68,19)" fg:x="9884" fg:w="451"/><text x="31.4102%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (451 samples, 1.42%)</title><rect x="31.1602%" y="469" width="1.4218%" height="15" fill="rgb(240,187,13)" fg:x="9884" fg:w="451"/><text x="31.4102%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (451 samples, 1.42%)</title><rect x="31.1602%" y="453" width="1.4218%" height="15" fill="rgb(223,113,26)" fg:x="9884" fg:w="451"/><text x="31.4102%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (451 samples, 1.42%)</title><rect x="31.1602%" y="437" width="1.4218%" height="15" fill="rgb(206,192,2)" fg:x="9884" fg:w="451"/><text x="31.4102%" y="447.50"></text></g><g><title>core::ptr::write (68 samples, 0.21%)</title><rect x="32.3676%" y="421" width="0.2144%" height="15" fill="rgb(241,108,4)" fg:x="10267" fg:w="68"/><text x="32.6176%" y="431.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::scale_mut (12 samples, 0.04%)</title><rect x="32.5820%" y="565" width="0.0378%" height="15" fill="rgb(247,173,49)" fg:x="10335" fg:w="12"/><text x="32.8320%" y="575.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::apply (12 samples, 0.04%)</title><rect x="32.5820%" y="549" width="0.0378%" height="15" fill="rgb(224,114,35)" fg:x="10335" fg:w="12"/><text x="32.8320%" y="559.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::scale_mut::{{closure}} (12 samples, 0.04%)</title><rect x="32.5820%" y="533" width="0.0378%" height="15" fill="rgb(245,159,27)" fg:x="10335" fg:w="12"/><text x="32.8320%" y="543.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_scale (12 samples, 0.04%)</title><rect x="32.5820%" y="517" width="0.0378%" height="15" fill="rgb(245,172,44)" fg:x="10335" fg:w="12"/><text x="32.8320%" y="527.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::scale (12 samples, 0.04%)</title><rect x="32.5820%" y="501" width="0.0378%" height="15" fill="rgb(236,23,11)" fg:x="10335" fg:w="12"/><text x="32.8320%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.04%)</title><rect x="32.6198%" y="485" width="0.0410%" height="15" fill="rgb(205,117,38)" fg:x="10347" fg:w="13"/><text x="32.8698%" y="495.50"></text></g><g><title>matrixmultiply::gemm::pack (14 samples, 0.04%)</title><rect x="32.6198%" y="501" width="0.0441%" height="15" fill="rgb(237,72,25)" fg:x="10347" fg:w="14"/><text x="32.8698%" y="511.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::SMultiplyAdd&gt;::multiply_add (254 samples, 0.80%)</title><rect x="32.7238%" y="373" width="0.8008%" height="15" fill="rgb(244,70,9)" fg:x="10380" fg:w="254"/><text x="32.9738%" y="383.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_ps (254 samples, 0.80%)</title><rect x="32.7238%" y="357" width="0.8008%" height="15" fill="rgb(217,125,39)" fg:x="10380" fg:w="254"/><text x="32.9738%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_ps (13 samples, 0.04%)</title><rect x="33.5246%" y="373" width="0.0410%" height="15" fill="rgb(235,36,10)" fg:x="10634" fg:w="13"/><text x="33.7746%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_ps (4 samples, 0.01%)</title><rect x="33.5656%" y="373" width="0.0126%" height="15" fill="rgb(251,123,47)" fg:x="10647" fg:w="4"/><text x="33.8156%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="33.5656%" y="357" width="0.0126%" height="15" fill="rgb(221,13,13)" fg:x="10647" fg:w="4"/><text x="33.8156%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_movehdup_ps (5 samples, 0.02%)</title><rect x="33.5782%" y="373" width="0.0158%" height="15" fill="rgb(238,131,9)" fg:x="10651" fg:w="5"/><text x="33.8282%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_moveldup_ps (15 samples, 0.05%)</title><rect x="33.5939%" y="373" width="0.0473%" height="15" fill="rgb(211,50,8)" fg:x="10656" fg:w="15"/><text x="33.8439%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_ps (45 samples, 0.14%)</title><rect x="33.6444%" y="373" width="0.1419%" height="15" fill="rgb(245,182,24)" fg:x="10672" fg:w="45"/><text x="33.8944%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute_ps (22 samples, 0.07%)</title><rect x="33.7863%" y="373" width="0.0694%" height="15" fill="rgb(242,14,37)" fg:x="10717" fg:w="22"/><text x="34.0363%" y="383.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (389 samples, 1.23%)</title><rect x="32.6639%" y="469" width="1.2264%" height="15" fill="rgb(246,228,12)" fg:x="10361" fg:w="389"/><text x="32.9139%" y="479.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (389 samples, 1.23%)</title><rect x="32.6639%" y="453" width="1.2264%" height="15" fill="rgb(213,55,15)" fg:x="10361" fg:w="389"/><text x="32.9139%" y="463.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::{{closure}} (389 samples, 1.23%)</title><rect x="32.6639%" y="437" width="1.2264%" height="15" fill="rgb(209,9,3)" fg:x="10361" fg:w="389"/><text x="32.9139%" y="447.50"></text></g><g><title>&lt;matrixmultiply::sgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (389 samples, 1.23%)</title><rect x="32.6639%" y="421" width="1.2264%" height="15" fill="rgb(230,59,30)" fg:x="10361" fg:w="389"/><text x="32.9139%" y="431.50"></text></g><g><title>matrixmultiply::sgemm_kernel::kernel_target_fma (389 samples, 1.23%)</title><rect x="32.6639%" y="405" width="1.2264%" height="15" fill="rgb(209,121,21)" fg:x="10361" fg:w="389"/><text x="32.9139%" y="415.50"></text></g><g><title>matrixmultiply::sgemm_kernel::kernel_x86_avx (388 samples, 1.22%)</title><rect x="32.6671%" y="389" width="1.2232%" height="15" fill="rgb(220,109,13)" fg:x="10362" fg:w="388"/><text x="32.9171%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.02%)</title><rect x="33.8714%" y="373" width="0.0189%" height="15" fill="rgb(232,18,1)" fg:x="10744" fg:w="6"/><text x="34.1214%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.02%)</title><rect x="33.8714%" y="357" width="0.0189%" height="15" fill="rgb(215,41,42)" fg:x="10744" fg:w="6"/><text x="34.1214%" y="367.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::MulAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C1,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul_assign (410 samples, 1.29%)</title><rect x="32.6198%" y="565" width="1.2926%" height="15" fill="rgb(224,123,36)" fg:x="10347" fg:w="410"/><text x="32.8698%" y="575.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (410 samples, 1.29%)</title><rect x="32.6198%" y="549" width="1.2926%" height="15" fill="rgb(240,125,3)" fg:x="10347" fg:w="410"/><text x="32.8698%" y="559.50"></text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (410 samples, 1.29%)</title><rect x="32.6198%" y="533" width="1.2926%" height="15" fill="rgb(205,98,50)" fg:x="10347" fg:w="410"/><text x="32.8698%" y="543.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (410 samples, 1.29%)</title><rect x="32.6198%" y="517" width="1.2926%" height="15" fill="rgb(205,185,37)" fg:x="10347" fg:w="410"/><text x="32.8698%" y="527.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (396 samples, 1.25%)</title><rect x="32.6639%" y="501" width="1.2484%" height="15" fill="rgb(238,207,15)" fg:x="10361" fg:w="396"/><text x="32.9139%" y="511.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop::{{closure}} (396 samples, 1.25%)</title><rect x="32.6639%" y="485" width="1.2484%" height="15" fill="rgb(213,199,42)" fg:x="10361" fg:w="396"/><text x="32.9139%" y="495.50"></text></g><g><title>matrixmultiply::gemm::pack (7 samples, 0.02%)</title><rect x="33.8903%" y="469" width="0.0221%" height="15" fill="rgb(235,201,11)" fg:x="10750" fg:w="7"/><text x="34.1403%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="33.8903%" y="453" width="0.0221%" height="15" fill="rgb(207,46,11)" fg:x="10750" fg:w="7"/><text x="34.1403%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 0.10%)</title><rect x="33.9155%" y="485" width="0.0977%" height="15" fill="rgb(241,35,35)" fg:x="10758" fg:w="31"/><text x="34.1655%" y="495.50"></text></g><g><title>matrixmultiply::gemm::pack (33 samples, 0.10%)</title><rect x="33.9155%" y="501" width="0.1040%" height="15" fill="rgb(243,32,47)" fg:x="10758" fg:w="33"/><text x="34.1655%" y="511.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::SMultiplyAdd&gt;::multiply_add (1,365 samples, 4.30%)</title><rect x="34.3096%" y="373" width="4.3033%" height="15" fill="rgb(247,202,23)" fg:x="10883" fg:w="1365"/><text x="34.5596%" y="383.50">&lt;matr..</text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_ps (1,365 samples, 4.30%)</title><rect x="34.3096%" y="357" width="4.3033%" height="15" fill="rgb(219,102,11)" fg:x="10883" fg:w="1365"/><text x="34.5596%" y="367.50">core:..</text></g><g><title>core::core_arch::x86::avx::_mm256_load_ps (130 samples, 0.41%)</title><rect x="38.6129%" y="373" width="0.4098%" height="15" fill="rgb(243,110,44)" fg:x="12248" fg:w="130"/><text x="38.8629%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_ps (46 samples, 0.15%)</title><rect x="39.0227%" y="373" width="0.1450%" height="15" fill="rgb(222,74,54)" fg:x="12378" fg:w="46"/><text x="39.2727%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46 samples, 0.15%)</title><rect x="39.0227%" y="357" width="0.1450%" height="15" fill="rgb(216,99,12)" fg:x="12378" fg:w="46"/><text x="39.2727%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_movehdup_ps (38 samples, 0.12%)</title><rect x="39.1677%" y="373" width="0.1198%" height="15" fill="rgb(226,22,26)" fg:x="12424" fg:w="38"/><text x="39.4177%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_moveldup_ps (48 samples, 0.15%)</title><rect x="39.2875%" y="373" width="0.1513%" height="15" fill="rgb(217,163,10)" fg:x="12462" fg:w="48"/><text x="39.5375%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_ps (164 samples, 0.52%)</title><rect x="39.4483%" y="373" width="0.5170%" height="15" fill="rgb(213,25,53)" fg:x="12513" fg:w="164"/><text x="39.6983%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute_ps (155 samples, 0.49%)</title><rect x="39.9653%" y="373" width="0.4887%" height="15" fill="rgb(252,105,26)" fg:x="12677" fg:w="155"/><text x="40.2153%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_ps (10 samples, 0.03%)</title><rect x="40.4540%" y="373" width="0.0315%" height="15" fill="rgb(220,39,43)" fg:x="12832" fg:w="10"/><text x="40.7040%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_ps (7 samples, 0.02%)</title><rect x="40.4855%" y="373" width="0.0221%" height="15" fill="rgb(229,68,48)" fg:x="12842" fg:w="7"/><text x="40.7355%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (23 samples, 0.07%)</title><rect x="40.5076%" y="373" width="0.0725%" height="15" fill="rgb(252,8,32)" fg:x="12849" fg:w="23"/><text x="40.7576%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (23 samples, 0.07%)</title><rect x="40.5076%" y="357" width="0.0725%" height="15" fill="rgb(223,20,43)" fg:x="12849" fg:w="23"/><text x="40.7576%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8 samples, 0.03%)</title><rect x="40.5549%" y="341" width="0.0252%" height="15" fill="rgb(229,81,49)" fg:x="12864" fg:w="8"/><text x="40.8049%" y="351.50"></text></g><g><title>&lt;matrixmultiply::sgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (2,080 samples, 6.56%)</title><rect x="34.0259%" y="421" width="6.5574%" height="15" fill="rgb(236,28,36)" fg:x="10793" fg:w="2080"/><text x="34.2759%" y="431.50">&lt;matrixmu..</text></g><g><title>matrixmultiply::sgemm_kernel::kernel_target_fma (2,074 samples, 6.54%)</title><rect x="34.0448%" y="405" width="6.5385%" height="15" fill="rgb(249,185,26)" fg:x="10799" fg:w="2074"/><text x="34.2948%" y="415.50">matrixmul..</text></g><g><title>matrixmultiply::sgemm_kernel::kernel_x86_avx (2,073 samples, 6.54%)</title><rect x="34.0479%" y="389" width="6.5353%" height="15" fill="rgb(249,174,33)" fg:x="10800" fg:w="2073"/><text x="34.2979%" y="399.50">matrixmul..</text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="40.5832%" y="421" width="0.0126%" height="15" fill="rgb(233,201,37)" fg:x="12873" fg:w="4"/><text x="40.8332%" y="431.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (2,087 samples, 6.58%)</title><rect x="34.0195%" y="469" width="6.5794%" height="15" fill="rgb(221,78,26)" fg:x="10791" fg:w="2087"/><text x="34.2695%" y="479.50">matrixmul..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (2,087 samples, 6.58%)</title><rect x="34.0195%" y="453" width="6.5794%" height="15" fill="rgb(250,127,30)" fg:x="10791" fg:w="2087"/><text x="34.2695%" y="463.50">matrixmul..</text></g><g><title>matrixmultiply::gemm::gemm_packed::{{closure}} (2,086 samples, 6.58%)</title><rect x="34.0227%" y="437" width="6.5763%" height="15" fill="rgb(230,49,44)" fg:x="10792" fg:w="2086"/><text x="34.2727%" y="447.50">matrixmul..</text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul_to (2,183 samples, 6.88%)</title><rect x="33.9124%" y="565" width="6.8821%" height="15" fill="rgb(229,67,23)" fg:x="10757" fg:w="2183"/><text x="34.1624%" y="575.50">nalgebra:..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gemm (2,183 samples, 6.88%)</title><rect x="33.9124%" y="549" width="6.8821%" height="15" fill="rgb(249,83,47)" fg:x="10757" fg:w="2183"/><text x="34.1624%" y="559.50">nalgebra:..</text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (2,183 samples, 6.88%)</title><rect x="33.9124%" y="533" width="6.8821%" height="15" fill="rgb(215,43,3)" fg:x="10757" fg:w="2183"/><text x="34.1624%" y="543.50">nalgebra:..</text></g><g><title>matrixmultiply::gemm::gemm_loop (2,183 samples, 6.88%)</title><rect x="33.9124%" y="517" width="6.8821%" height="15" fill="rgb(238,154,13)" fg:x="10757" fg:w="2183"/><text x="34.1624%" y="527.50">matrixmul..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (2,149 samples, 6.77%)</title><rect x="34.0195%" y="501" width="6.7749%" height="15" fill="rgb(219,56,2)" fg:x="10791" fg:w="2149"/><text x="34.2695%" y="511.50">matrixmul..</text></g><g><title>matrixmultiply::gemm::gemm_loop::{{closure}} (2,149 samples, 6.77%)</title><rect x="34.0195%" y="485" width="6.7749%" height="15" fill="rgb(233,0,4)" fg:x="10791" fg:w="2149"/><text x="34.2695%" y="495.50">matrixmul..</text></g><g><title>matrixmultiply::gemm::pack (62 samples, 0.20%)</title><rect x="40.5990%" y="469" width="0.1955%" height="15" fill="rgb(235,30,7)" fg:x="12878" fg:w="62"/><text x="40.8490%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.20%)</title><rect x="40.5990%" y="453" width="0.1955%" height="15" fill="rgb(250,79,13)" fg:x="12878" fg:w="62"/><text x="40.8490%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.04%)</title><rect x="41.5984%" y="501" width="0.0410%" height="15" fill="rgb(211,146,34)" fg:x="13195" fg:w="13"/><text x="41.8484%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13 samples, 0.04%)</title><rect x="41.5984%" y="485" width="0.0410%" height="15" fill="rgb(228,22,38)" fg:x="13195" fg:w="13"/><text x="41.8484%" y="495.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut (4 samples, 0.01%)</title><rect x="41.6393%" y="501" width="0.0126%" height="15" fill="rgb(235,168,5)" fg:x="13208" fg:w="4"/><text x="41.8893%" y="511.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::apply (4 samples, 0.01%)</title><rect x="41.6393%" y="485" width="0.0126%" height="15" fill="rgb(221,155,16)" fg:x="13208" fg:w="4"/><text x="41.8893%" y="495.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut::{{closure}} (4 samples, 0.01%)</title><rect x="41.6393%" y="469" width="0.0126%" height="15" fill="rgb(215,215,53)" fg:x="13208" fg:w="4"/><text x="41.8893%" y="479.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.03%)</title><rect x="41.6520%" y="453" width="0.0315%" height="15" fill="rgb(223,4,10)" fg:x="13212" fg:w="10"/><text x="41.9020%" y="463.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_norm1 (4 samples, 0.01%)</title><rect x="41.6835%" y="437" width="0.0126%" height="15" fill="rgb(234,103,6)" fg:x="13222" fg:w="4"/><text x="41.9335%" y="447.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::norm1 (4 samples, 0.01%)</title><rect x="41.6835%" y="421" width="0.0126%" height="15" fill="rgb(227,97,0)" fg:x="13222" fg:w="4"/><text x="41.9335%" y="431.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (4 samples, 0.01%)</title><rect x="41.6835%" y="405" width="0.0126%" height="15" fill="rgb(234,150,53)" fg:x="13222" fg:w="4"/><text x="41.9335%" y="415.50"></text></g><g><title>nalgebra::base::min_max::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::camax (41 samples, 0.13%)</title><rect x="41.6520%" y="501" width="0.1293%" height="15" fill="rgb(228,201,54)" fg:x="13212" fg:w="41"/><text x="41.9020%" y="511.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::fold_with (41 samples, 0.13%)</title><rect x="41.6520%" y="485" width="0.1293%" height="15" fill="rgb(222,22,37)" fg:x="13212" fg:w="41"/><text x="41.9020%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (41 samples, 0.13%)</title><rect x="41.6520%" y="469" width="0.1293%" height="15" fill="rgb(237,53,32)" fg:x="13212" fg:w="41"/><text x="41.9020%" y="479.50"></text></g><g><title>nalgebra::base::min_max::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::camax::{{closure}} (31 samples, 0.10%)</title><rect x="41.6835%" y="453" width="0.0977%" height="15" fill="rgb(233,25,53)" fg:x="13222" fg:w="31"/><text x="41.9335%" y="463.50"></text></g><g><title>&lt;T as simba::simd::simd_partial_ord::SimdPartialOrd&gt;::simd_max (27 samples, 0.09%)</title><rect x="41.6961%" y="437" width="0.0851%" height="15" fill="rgb(210,40,34)" fg:x="13226" fg:w="27"/><text x="41.9461%" y="447.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::vector_to_matrix_index (5 samples, 0.02%)</title><rect x="41.7812%" y="485" width="0.0158%" height="15" fill="rgb(241,220,44)" fg:x="13253" fg:w="5"/><text x="42.0312%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (19 samples, 0.06%)</title><rect x="41.7812%" y="501" width="0.0599%" height="15" fill="rgb(235,28,35)" fg:x="13253" fg:w="19"/><text x="42.0312%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (14 samples, 0.04%)</title><rect x="41.7970%" y="485" width="0.0441%" height="15" fill="rgb(210,56,17)" fg:x="13258" fg:w="14"/><text x="42.0470%" y="495.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::vector_to_matrix_index (10 samples, 0.03%)</title><rect x="41.8411%" y="485" width="0.0315%" height="15" fill="rgb(224,130,29)" fg:x="13272" fg:w="10"/><text x="42.0911%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::IndexMut&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index_mut (16 samples, 0.05%)</title><rect x="41.8411%" y="501" width="0.0504%" height="15" fill="rgb(235,212,8)" fg:x="13272" fg:w="16"/><text x="42.0911%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::IndexMut&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index_mut (6 samples, 0.02%)</title><rect x="41.8726%" y="485" width="0.0189%" height="15" fill="rgb(223,33,50)" fg:x="13282" fg:w="6"/><text x="42.1226%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Neg&gt;::neg (6 samples, 0.02%)</title><rect x="41.8947%" y="485" width="0.0189%" height="15" fill="rgb(219,149,13)" fg:x="13289" fg:w="6"/><text x="42.1447%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::neg_mut (20 samples, 0.06%)</title><rect x="41.8916%" y="501" width="0.0631%" height="15" fill="rgb(250,156,29)" fg:x="13288" fg:w="20"/><text x="42.1416%" y="511.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.04%)</title><rect x="41.9136%" y="485" width="0.0410%" height="15" fill="rgb(216,193,19)" fg:x="13295" fg:w="13"/><text x="42.1636%" y="495.50"></text></g><g><title>nalgebra::linalg::bidiagonal::Bidiagonal&lt;T,R,C&gt;::is_upper_diagonal (6 samples, 0.02%)</title><rect x="41.9578%" y="501" width="0.0189%" height="15" fill="rgb(216,135,14)" fg:x="13309" fg:w="6"/><text x="42.2078%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (9 samples, 0.03%)</title><rect x="41.9767%" y="453" width="0.0284%" height="15" fill="rgb(241,47,5)" fg:x="13315" fg:w="9"/><text x="42.2267%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (5 samples, 0.02%)</title><rect x="42.0050%" y="453" width="0.0158%" height="15" fill="rgb(233,42,35)" fg:x="13324" fg:w="5"/><text x="42.2550%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (124 samples, 0.39%)</title><rect x="42.2573%" y="389" width="0.3909%" height="15" fill="rgb(231,13,6)" fg:x="13404" fg:w="124"/><text x="42.5073%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (181 samples, 0.57%)</title><rect x="42.6482%" y="389" width="0.5706%" height="15" fill="rgb(207,181,40)" fg:x="13528" fg:w="181"/><text x="42.8982%" y="399.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (422 samples, 1.33%)</title><rect x="42.0240%" y="453" width="1.3304%" height="15" fill="rgb(254,173,49)" fg:x="13330" fg:w="422"/><text x="42.2740%" y="463.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (422 samples, 1.33%)</title><rect x="42.0240%" y="437" width="1.3304%" height="15" fill="rgb(221,1,38)" fg:x="13330" fg:w="422"/><text x="42.2740%" y="447.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (422 samples, 1.33%)</title><rect x="42.0240%" y="421" width="1.3304%" height="15" fill="rgb(206,124,46)" fg:x="13330" fg:w="422"/><text x="42.2740%" y="431.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (422 samples, 1.33%)</title><rect x="42.0240%" y="405" width="1.3304%" height="15" fill="rgb(249,21,11)" fg:x="13330" fg:w="422"/><text x="42.2740%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (43 samples, 0.14%)</title><rect x="43.2188%" y="389" width="0.1356%" height="15" fill="rgb(222,201,40)" fg:x="13709" fg:w="43"/><text x="43.4688%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (43 samples, 0.14%)</title><rect x="43.2188%" y="373" width="0.1356%" height="15" fill="rgb(235,61,29)" fg:x="13709" fg:w="43"/><text x="43.4688%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (18 samples, 0.06%)</title><rect x="43.2976%" y="357" width="0.0567%" height="15" fill="rgb(219,207,3)" fg:x="13734" fg:w="18"/><text x="43.5476%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (18 samples, 0.06%)</title><rect x="43.2976%" y="341" width="0.0567%" height="15" fill="rgb(222,56,46)" fg:x="13734" fg:w="18"/><text x="43.5476%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (8 samples, 0.03%)</title><rect x="44.1709%" y="421" width="0.0252%" height="15" fill="rgb(239,76,54)" fg:x="14011" fg:w="8"/><text x="44.4209%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (554 samples, 1.75%)</title><rect x="44.1961%" y="421" width="1.7465%" height="15" fill="rgb(231,124,27)" fg:x="14019" fg:w="554"/><text x="44.4461%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (195 samples, 0.61%)</title><rect x="45.9426%" y="421" width="0.6148%" height="15" fill="rgb(249,195,6)" fg:x="14573" fg:w="195"/><text x="46.1926%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.04%)</title><rect x="46.5574%" y="421" width="0.0410%" height="15" fill="rgb(237,174,47)" fg:x="14768" fg:w="13"/><text x="46.8074%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13 samples, 0.04%)</title><rect x="46.5574%" y="405" width="0.0410%" height="15" fill="rgb(206,201,31)" fg:x="14768" fg:w="13"/><text x="46.8074%" y="415.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (1,032 samples, 3.25%)</title><rect x="43.3544%" y="453" width="3.2535%" height="15" fill="rgb(231,57,52)" fg:x="13752" fg:w="1032"/><text x="43.6044%" y="463.50">nal..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (1,032 samples, 3.25%)</title><rect x="43.3544%" y="437" width="3.2535%" height="15" fill="rgb(248,177,22)" fg:x="13752" fg:w="1032"/><text x="43.6044%" y="447.50">nal..</text></g><g><title>nalgebra::geometry::reflection::Reflection&lt;T,D,S&gt;::reflect_with_sign (1,470 samples, 4.63%)</title><rect x="41.9767%" y="469" width="4.6343%" height="15" fill="rgb(215,211,37)" fg:x="13315" fg:w="1470"/><text x="42.2267%" y="479.50">nalge..</text></g><g><title>nalgebra::linalg::householder::clear_column_unchecked (1,477 samples, 4.66%)</title><rect x="41.9767%" y="485" width="4.6564%" height="15" fill="rgb(241,128,51)" fg:x="13315" fg:w="1477"/><text x="42.2267%" y="495.50">nalge..</text></g><g><title>nalgebra::linalg::householder::reflection_axis_mut (7 samples, 0.02%)</title><rect x="46.6110%" y="469" width="0.0221%" height="15" fill="rgb(227,165,31)" fg:x="14785" fg:w="7"/><text x="46.8610%" y="479.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (4 samples, 0.01%)</title><rect x="46.6204%" y="453" width="0.0126%" height="15" fill="rgb(228,167,24)" fg:x="14788" fg:w="4"/><text x="46.8704%" y="463.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (4 samples, 0.01%)</title><rect x="46.6204%" y="437" width="0.0126%" height="15" fill="rgb(228,143,12)" fg:x="14788" fg:w="4"/><text x="46.8704%" y="447.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (4 samples, 0.01%)</title><rect x="46.6204%" y="421" width="0.0126%" height="15" fill="rgb(249,149,8)" fg:x="14788" fg:w="4"/><text x="46.8704%" y="431.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::tr_copy_from (38 samples, 0.12%)</title><rect x="46.6330%" y="469" width="0.1198%" height="15" fill="rgb(243,35,44)" fg:x="14792" fg:w="38"/><text x="46.8830%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (4 samples, 0.01%)</title><rect x="46.7560%" y="421" width="0.0126%" height="15" fill="rgb(246,89,9)" fg:x="14831" fg:w="4"/><text x="47.0060%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (170 samples, 0.54%)</title><rect x="46.9199%" y="357" width="0.5359%" height="15" fill="rgb(233,213,13)" fg:x="14883" fg:w="170"/><text x="47.1699%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (374 samples, 1.18%)</title><rect x="47.4559%" y="357" width="1.1791%" height="15" fill="rgb(233,141,41)" fg:x="15053" fg:w="374"/><text x="47.7059%" y="367.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gerc (622 samples, 1.96%)</title><rect x="46.7560%" y="453" width="1.9609%" height="15" fill="rgb(239,167,4)" fg:x="14831" fg:w="622"/><text x="47.0060%" y="463.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gerx (622 samples, 1.96%)</title><rect x="46.7560%" y="437" width="1.9609%" height="15" fill="rgb(209,217,16)" fg:x="14831" fg:w="622"/><text x="47.0060%" y="447.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (615 samples, 1.94%)</title><rect x="46.7781%" y="421" width="1.9388%" height="15" fill="rgb(219,88,35)" fg:x="14838" fg:w="615"/><text x="47.0281%" y="431.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (615 samples, 1.94%)</title><rect x="46.7781%" y="405" width="1.9388%" height="15" fill="rgb(220,193,23)" fg:x="14838" fg:w="615"/><text x="47.0281%" y="415.50">n..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (615 samples, 1.94%)</title><rect x="46.7781%" y="389" width="1.9388%" height="15" fill="rgb(230,90,52)" fg:x="14838" fg:w="615"/><text x="47.0281%" y="399.50">n..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (615 samples, 1.94%)</title><rect x="46.7781%" y="373" width="1.9388%" height="15" fill="rgb(252,106,19)" fg:x="14838" fg:w="615"/><text x="47.0281%" y="383.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (26 samples, 0.08%)</title><rect x="48.6349%" y="357" width="0.0820%" height="15" fill="rgb(206,74,20)" fg:x="15427" fg:w="26"/><text x="48.8849%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (26 samples, 0.08%)</title><rect x="48.6349%" y="341" width="0.0820%" height="15" fill="rgb(230,138,44)" fg:x="15427" fg:w="26"/><text x="48.8849%" y="351.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (13 samples, 0.04%)</title><rect x="48.6759%" y="325" width="0.0410%" height="15" fill="rgb(235,182,43)" fg:x="15440" fg:w="13"/><text x="48.9259%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (13 samples, 0.04%)</title><rect x="48.6759%" y="309" width="0.0410%" height="15" fill="rgb(242,16,51)" fg:x="15440" fg:w="13"/><text x="48.9259%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (137 samples, 0.43%)</title><rect x="49.0038%" y="357" width="0.4319%" height="15" fill="rgb(248,9,4)" fg:x="15544" fg:w="137"/><text x="49.2538%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (276 samples, 0.87%)</title><rect x="49.4357%" y="357" width="0.8701%" height="15" fill="rgb(210,31,22)" fg:x="15681" fg:w="276"/><text x="49.6857%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (18 samples, 0.06%)</title><rect x="50.3562%" y="325" width="0.0567%" height="15" fill="rgb(239,54,39)" fg:x="15973" fg:w="18"/><text x="50.6062%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (18 samples, 0.06%)</title><rect x="50.3562%" y="309" width="0.0567%" height="15" fill="rgb(230,99,41)" fg:x="15973" fg:w="18"/><text x="50.6062%" y="319.50"></text></g><g><title>nalgebra::geometry::reflection::Reflection&lt;T,D,S&gt;::reflect_rows_with_sign (1,161 samples, 3.66%)</title><rect x="46.7560%" y="469" width="3.6602%" height="15" fill="rgb(253,106,12)" fg:x="14831" fg:w="1161"/><text x="47.0060%" y="479.50">nalg..</text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul_to (539 samples, 1.70%)</title><rect x="48.7169%" y="453" width="1.6992%" height="15" fill="rgb(213,46,41)" fg:x="15453" fg:w="539"/><text x="48.9669%" y="463.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gemm (539 samples, 1.70%)</title><rect x="48.7169%" y="437" width="1.6992%" height="15" fill="rgb(215,133,35)" fg:x="15453" fg:w="539"/><text x="48.9669%" y="447.50"></text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (539 samples, 1.70%)</title><rect x="48.7169%" y="421" width="1.6992%" height="15" fill="rgb(213,28,5)" fg:x="15453" fg:w="539"/><text x="48.9669%" y="431.50"></text></g><g><title>nalgebra::base::blas_uninit::gemv_uninit (539 samples, 1.70%)</title><rect x="48.7169%" y="405" width="1.6992%" height="15" fill="rgb(215,77,49)" fg:x="15453" fg:w="539"/><text x="48.9669%" y="415.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (534 samples, 1.68%)</title><rect x="48.7327%" y="389" width="1.6835%" height="15" fill="rgb(248,100,22)" fg:x="15458" fg:w="534"/><text x="48.9827%" y="399.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (534 samples, 1.68%)</title><rect x="48.7327%" y="373" width="1.6835%" height="15" fill="rgb(208,67,9)" fg:x="15458" fg:w="534"/><text x="48.9827%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (35 samples, 0.11%)</title><rect x="50.3058%" y="357" width="0.1103%" height="15" fill="rgb(219,133,21)" fg:x="15957" fg:w="35"/><text x="50.5558%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (35 samples, 0.11%)</title><rect x="50.3058%" y="341" width="0.1103%" height="15" fill="rgb(246,46,29)" fg:x="15957" fg:w="35"/><text x="50.5558%" y="351.50"></text></g><g><title>nalgebra::linalg::bidiagonal::Bidiagonal&lt;T,R,C&gt;::new (2,681 samples, 8.45%)</title><rect x="41.9767%" y="501" width="8.4521%" height="15" fill="rgb(246,185,52)" fg:x="13315" fg:w="2681"/><text x="42.2267%" y="511.50">nalgebra::li..</text></g><g><title>nalgebra::linalg::householder::clear_row_unchecked (1,204 samples, 3.80%)</title><rect x="46.6330%" y="485" width="3.7957%" height="15" fill="rgb(252,136,11)" fg:x="14792" fg:w="1204"/><text x="46.8830%" y="495.50">nalg..</text></g><g><title>nalgebra::linalg::householder::reflection_axis_mut (4 samples, 0.01%)</title><rect x="50.4161%" y="469" width="0.0126%" height="15" fill="rgb(219,138,53)" fg:x="15992" fg:w="4"/><text x="50.6661%" y="479.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::identity_generic (5 samples, 0.02%)</title><rect x="50.4319%" y="485" width="0.0158%" height="15" fill="rgb(211,51,23)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="495.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_diagonal_element_generic (5 samples, 0.02%)</title><rect x="50.4319%" y="469" width="0.0158%" height="15" fill="rgb(247,221,28)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="479.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::zeros_generic (5 samples, 0.02%)</title><rect x="50.4319%" y="453" width="0.0158%" height="15" fill="rgb(251,222,45)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="463.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_element_generic (5 samples, 0.02%)</title><rect x="50.4319%" y="437" width="0.0158%" height="15" fill="rgb(217,162,53)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="447.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_iterator_generic (5 samples, 0.02%)</title><rect x="50.4319%" y="421" width="0.0158%" height="15" fill="rgb(229,93,14)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="431.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;::allocate_from_iterator (5 samples, 0.02%)</title><rect x="50.4319%" y="405" width="0.0158%" height="15" fill="rgb(209,67,49)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.02%)</title><rect x="50.4319%" y="389" width="0.0158%" height="15" fill="rgb(213,87,29)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="50.4319%" y="373" width="0.0158%" height="15" fill="rgb(205,151,52)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="50.4319%" y="357" width="0.0158%" height="15" fill="rgb(253,215,39)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="50.4319%" y="341" width="0.0158%" height="15" fill="rgb(221,220,41)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="50.4319%" y="325" width="0.0158%" height="15" fill="rgb(218,133,21)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.02%)</title><rect x="50.4319%" y="309" width="0.0158%" height="15" fill="rgb(221,193,43)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="50.4319%" y="293" width="0.0158%" height="15" fill="rgb(240,128,52)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="50.4319%" y="277" width="0.0158%" height="15" fill="rgb(253,114,12)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.02%)</title><rect x="50.4319%" y="261" width="0.0158%" height="15" fill="rgb(215,223,47)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (5 samples, 0.02%)</title><rect x="50.4319%" y="245" width="0.0158%" height="15" fill="rgb(248,225,23)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="255.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (5 samples, 0.02%)</title><rect x="50.4319%" y="229" width="0.0158%" height="15" fill="rgb(250,108,0)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="239.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.02%)</title><rect x="50.4319%" y="213" width="0.0158%" height="15" fill="rgb(228,208,7)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="223.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (5 samples, 0.02%)</title><rect x="50.4319%" y="197" width="0.0158%" height="15" fill="rgb(244,45,10)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.02%)</title><rect x="50.4319%" y="181" width="0.0158%" height="15" fill="rgb(207,125,25)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (5 samples, 0.02%)</title><rect x="50.4319%" y="165" width="0.0158%" height="15" fill="rgb(210,195,18)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="175.50"></text></g><g><title>core::ptr::write (5 samples, 0.02%)</title><rect x="50.4319%" y="149" width="0.0158%" height="15" fill="rgb(249,80,12)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="159.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="50.4319%" y="133" width="0.0158%" height="15" fill="rgb(221,65,9)" fg:x="15997" fg:w="5"/><text x="50.6819%" y="143.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (5 samples, 0.02%)</title><rect x="50.4666%" y="469" width="0.0158%" height="15" fill="rgb(235,49,36)" fg:x="16008" fg:w="5"/><text x="50.7166%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (4 samples, 0.01%)</title><rect x="50.4823%" y="469" width="0.0126%" height="15" fill="rgb(225,32,20)" fg:x="16013" fg:w="4"/><text x="50.7323%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (134 samples, 0.42%)</title><rect x="50.7472%" y="405" width="0.4224%" height="15" fill="rgb(215,141,46)" fg:x="16097" fg:w="134"/><text x="50.9972%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (202 samples, 0.64%)</title><rect x="51.1696%" y="405" width="0.6368%" height="15" fill="rgb(250,160,47)" fg:x="16231" fg:w="202"/><text x="51.4196%" y="415.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (449 samples, 1.42%)</title><rect x="50.5044%" y="469" width="1.4155%" height="15" fill="rgb(216,222,40)" fg:x="16020" fg:w="449"/><text x="50.7544%" y="479.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (449 samples, 1.42%)</title><rect x="50.5044%" y="453" width="1.4155%" height="15" fill="rgb(234,217,39)" fg:x="16020" fg:w="449"/><text x="50.7544%" y="463.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (449 samples, 1.42%)</title><rect x="50.5044%" y="437" width="1.4155%" height="15" fill="rgb(207,178,40)" fg:x="16020" fg:w="449"/><text x="50.7544%" y="447.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (448 samples, 1.41%)</title><rect x="50.5076%" y="421" width="1.4124%" height="15" fill="rgb(221,136,13)" fg:x="16021" fg:w="448"/><text x="50.7576%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (36 samples, 0.11%)</title><rect x="51.8064%" y="405" width="0.1135%" height="15" fill="rgb(249,199,10)" fg:x="16433" fg:w="36"/><text x="52.0564%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (36 samples, 0.11%)</title><rect x="51.8064%" y="389" width="0.1135%" height="15" fill="rgb(249,222,13)" fg:x="16433" fg:w="36"/><text x="52.0564%" y="399.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (10 samples, 0.03%)</title><rect x="51.8884%" y="373" width="0.0315%" height="15" fill="rgb(244,185,38)" fg:x="16459" fg:w="10"/><text x="52.1384%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (10 samples, 0.03%)</title><rect x="51.8884%" y="357" width="0.0315%" height="15" fill="rgb(236,202,9)" fg:x="16459" fg:w="10"/><text x="52.1384%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (5 samples, 0.02%)</title><rect x="52.8090%" y="437" width="0.0158%" height="15" fill="rgb(250,229,37)" fg:x="16751" fg:w="5"/><text x="53.0590%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (600 samples, 1.89%)</title><rect x="52.8247%" y="437" width="1.8916%" height="15" fill="rgb(206,174,23)" fg:x="16756" fg:w="600"/><text x="53.0747%" y="447.50">&lt;..</text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (185 samples, 0.58%)</title><rect x="54.7163%" y="437" width="0.5832%" height="15" fill="rgb(211,33,43)" fg:x="17356" fg:w="185"/><text x="54.9663%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.03%)</title><rect x="55.2995%" y="437" width="0.0284%" height="15" fill="rgb(245,58,50)" fg:x="17541" fg:w="9"/><text x="55.5495%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.03%)</title><rect x="55.2995%" y="421" width="0.0284%" height="15" fill="rgb(244,68,36)" fg:x="17541" fg:w="9"/><text x="55.5495%" y="431.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (1,084 samples, 3.42%)</title><rect x="51.9199%" y="469" width="3.4174%" height="15" fill="rgb(232,229,15)" fg:x="16469" fg:w="1084"/><text x="52.1699%" y="479.50">nal..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (1,084 samples, 3.42%)</title><rect x="51.9199%" y="453" width="3.4174%" height="15" fill="rgb(254,30,23)" fg:x="16469" fg:w="1084"/><text x="52.1699%" y="463.50">nal..</text></g><g><title>nalgebra::linalg::bidiagonal::Bidiagonal&lt;T,R,C&gt;::u (1,558 samples, 4.91%)</title><rect x="50.4288%" y="501" width="4.9117%" height="15" fill="rgb(235,160,14)" fg:x="15996" fg:w="1558"/><text x="50.6788%" y="511.50">nalgeb..</text></g><g><title>nalgebra::geometry::reflection::Reflection&lt;T,D,S&gt;::reflect_with_sign (1,552 samples, 4.89%)</title><rect x="50.4477%" y="485" width="4.8928%" height="15" fill="rgb(212,155,44)" fg:x="16002" fg:w="1552"/><text x="50.6977%" y="495.50">nalgeb..</text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::identity_generic (6 samples, 0.02%)</title><rect x="55.3405%" y="485" width="0.0189%" height="15" fill="rgb(226,2,50)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="495.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_diagonal_element_generic (6 samples, 0.02%)</title><rect x="55.3405%" y="469" width="0.0189%" height="15" fill="rgb(234,177,6)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="479.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::zeros_generic (6 samples, 0.02%)</title><rect x="55.3405%" y="453" width="0.0189%" height="15" fill="rgb(217,24,9)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="463.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_element_generic (6 samples, 0.02%)</title><rect x="55.3405%" y="437" width="0.0189%" height="15" fill="rgb(220,13,46)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="447.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_iterator_generic (6 samples, 0.02%)</title><rect x="55.3405%" y="421" width="0.0189%" height="15" fill="rgb(239,221,27)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="431.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;::allocate_from_iterator (6 samples, 0.02%)</title><rect x="55.3405%" y="405" width="0.0189%" height="15" fill="rgb(222,198,25)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.02%)</title><rect x="55.3405%" y="389" width="0.0189%" height="15" fill="rgb(211,99,13)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="55.3405%" y="373" width="0.0189%" height="15" fill="rgb(232,111,31)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="55.3405%" y="357" width="0.0189%" height="15" fill="rgb(245,82,37)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="55.3405%" y="341" width="0.0189%" height="15" fill="rgb(227,149,46)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="55.3405%" y="325" width="0.0189%" height="15" fill="rgb(218,36,50)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.02%)</title><rect x="55.3405%" y="309" width="0.0189%" height="15" fill="rgb(226,80,48)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="55.3405%" y="293" width="0.0189%" height="15" fill="rgb(238,224,15)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="55.3405%" y="277" width="0.0189%" height="15" fill="rgb(241,136,10)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.02%)</title><rect x="55.3405%" y="261" width="0.0189%" height="15" fill="rgb(208,32,45)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (6 samples, 0.02%)</title><rect x="55.3405%" y="245" width="0.0189%" height="15" fill="rgb(207,135,9)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="255.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (6 samples, 0.02%)</title><rect x="55.3405%" y="229" width="0.0189%" height="15" fill="rgb(206,86,44)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="239.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.02%)</title><rect x="55.3405%" y="213" width="0.0189%" height="15" fill="rgb(245,177,15)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="223.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (6 samples, 0.02%)</title><rect x="55.3405%" y="197" width="0.0189%" height="15" fill="rgb(206,64,50)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.02%)</title><rect x="55.3405%" y="181" width="0.0189%" height="15" fill="rgb(234,36,40)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (6 samples, 0.02%)</title><rect x="55.3405%" y="165" width="0.0189%" height="15" fill="rgb(213,64,8)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="175.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="55.3405%" y="149" width="0.0189%" height="15" fill="rgb(210,75,36)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="159.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="55.3405%" y="133" width="0.0189%" height="15" fill="rgb(229,88,21)" fg:x="17554" fg:w="6"/><text x="55.5905%" y="143.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::tr_copy_from (31 samples, 0.10%)</title><rect x="55.3594%" y="485" width="0.0977%" height="15" fill="rgb(252,204,47)" fg:x="17560" fg:w="31"/><text x="55.6094%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (161 samples, 0.51%)</title><rect x="55.6747%" y="373" width="0.5076%" height="15" fill="rgb(208,77,27)" fg:x="17660" fg:w="161"/><text x="55.9247%" y="383.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (363 samples, 1.14%)</title><rect x="56.1822%" y="373" width="1.1444%" height="15" fill="rgb(221,76,26)" fg:x="17821" fg:w="363"/><text x="56.4322%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (21 samples, 0.07%)</title><rect x="57.3770%" y="341" width="0.0662%" height="15" fill="rgb(225,139,18)" fg:x="18200" fg:w="21"/><text x="57.6270%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (21 samples, 0.07%)</title><rect x="57.3770%" y="325" width="0.0662%" height="15" fill="rgb(230,137,11)" fg:x="18200" fg:w="21"/><text x="57.6270%" y="335.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gerc (629 samples, 1.98%)</title><rect x="55.4634%" y="469" width="1.9830%" height="15" fill="rgb(212,28,1)" fg:x="17593" fg:w="629"/><text x="55.7134%" y="479.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gerx (629 samples, 1.98%)</title><rect x="55.4634%" y="453" width="1.9830%" height="15" fill="rgb(248,164,17)" fg:x="17593" fg:w="629"/><text x="55.7134%" y="463.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (623 samples, 1.96%)</title><rect x="55.4823%" y="437" width="1.9641%" height="15" fill="rgb(222,171,42)" fg:x="17599" fg:w="623"/><text x="55.7323%" y="447.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (623 samples, 1.96%)</title><rect x="55.4823%" y="421" width="1.9641%" height="15" fill="rgb(243,84,45)" fg:x="17599" fg:w="623"/><text x="55.7323%" y="431.50">n..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (623 samples, 1.96%)</title><rect x="55.4823%" y="405" width="1.9641%" height="15" fill="rgb(252,49,23)" fg:x="17599" fg:w="623"/><text x="55.7323%" y="415.50">n..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (623 samples, 1.96%)</title><rect x="55.4823%" y="389" width="1.9641%" height="15" fill="rgb(215,19,7)" fg:x="17599" fg:w="623"/><text x="55.7323%" y="399.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (38 samples, 0.12%)</title><rect x="57.3266%" y="373" width="0.1198%" height="15" fill="rgb(238,81,41)" fg:x="18184" fg:w="38"/><text x="57.5766%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (38 samples, 0.12%)</title><rect x="57.3266%" y="357" width="0.1198%" height="15" fill="rgb(210,199,37)" fg:x="18184" fg:w="38"/><text x="57.5766%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (130 samples, 0.41%)</title><rect x="57.7585%" y="373" width="0.4098%" height="15" fill="rgb(244,192,49)" fg:x="18321" fg:w="130"/><text x="58.0085%" y="383.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (310 samples, 0.98%)</title><rect x="58.1683%" y="373" width="0.9773%" height="15" fill="rgb(226,211,11)" fg:x="18451" fg:w="310"/><text x="58.4183%" y="383.50"></text></g><g><title>nalgebra::linalg::bidiagonal::Bidiagonal&lt;T,R,C&gt;::v_t (1,247 samples, 3.93%)</title><rect x="55.3405%" y="501" width="3.9313%" height="15" fill="rgb(236,162,54)" fg:x="17554" fg:w="1247"/><text x="55.5905%" y="511.50">nalg..</text></g><g><title>nalgebra::geometry::reflection::Reflection&lt;T,D,S&gt;::reflect_rows_with_sign (1,209 samples, 3.81%)</title><rect x="55.4603%" y="485" width="3.8115%" height="15" fill="rgb(220,229,9)" fg:x="17592" fg:w="1209"/><text x="55.7103%" y="495.50">nalg..</text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul_to (579 samples, 1.83%)</title><rect x="57.4464%" y="469" width="1.8253%" height="15" fill="rgb(250,87,22)" fg:x="18222" fg:w="579"/><text x="57.6964%" y="479.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gemm (579 samples, 1.83%)</title><rect x="57.4464%" y="453" width="1.8253%" height="15" fill="rgb(239,43,17)" fg:x="18222" fg:w="579"/><text x="57.6964%" y="463.50">n..</text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (579 samples, 1.83%)</title><rect x="57.4464%" y="437" width="1.8253%" height="15" fill="rgb(231,177,25)" fg:x="18222" fg:w="579"/><text x="57.6964%" y="447.50">n..</text></g><g><title>nalgebra::base::blas_uninit::gemv_uninit (579 samples, 1.83%)</title><rect x="57.4464%" y="421" width="1.8253%" height="15" fill="rgb(219,179,1)" fg:x="18222" fg:w="579"/><text x="57.6964%" y="431.50">n..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (573 samples, 1.81%)</title><rect x="57.4653%" y="405" width="1.8064%" height="15" fill="rgb(238,219,53)" fg:x="18228" fg:w="573"/><text x="57.7153%" y="415.50">n..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (571 samples, 1.80%)</title><rect x="57.4716%" y="389" width="1.8001%" height="15" fill="rgb(232,167,36)" fg:x="18230" fg:w="571"/><text x="57.7216%" y="399.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (40 samples, 0.13%)</title><rect x="59.1456%" y="373" width="0.1261%" height="15" fill="rgb(244,19,51)" fg:x="18761" fg:w="40"/><text x="59.3956%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (40 samples, 0.13%)</title><rect x="59.1456%" y="357" width="0.1261%" height="15" fill="rgb(224,6,22)" fg:x="18761" fg:w="40"/><text x="59.3956%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (22 samples, 0.07%)</title><rect x="59.2024%" y="341" width="0.0694%" height="15" fill="rgb(224,145,5)" fg:x="18779" fg:w="22"/><text x="59.4524%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (22 samples, 0.07%)</title><rect x="59.2024%" y="325" width="0.0694%" height="15" fill="rgb(234,130,49)" fg:x="18779" fg:w="22"/><text x="59.4524%" y="335.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (22 samples, 0.07%)</title><rect x="59.3348%" y="485" width="0.0694%" height="15" fill="rgb(254,6,2)" fg:x="18821" fg:w="22"/><text x="59.5848%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Div&gt;::div (45 samples, 0.14%)</title><rect x="59.4042%" y="485" width="0.1419%" height="15" fill="rgb(208,96,46)" fg:x="18843" fg:w="45"/><text x="59.6542%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (19 samples, 0.06%)</title><rect x="59.5460%" y="485" width="0.0599%" height="15" fill="rgb(239,3,39)" fg:x="18888" fg:w="19"/><text x="59.7960%" y="495.50"></text></g><g><title>&lt;f32 as num_traits::identities::Zero&gt;::is_zero (13 samples, 0.04%)</title><rect x="59.6059%" y="485" width="0.0410%" height="15" fill="rgb(233,210,1)" fg:x="18907" fg:w="13"/><text x="59.8559%" y="495.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (87 samples, 0.27%)</title><rect x="59.6532%" y="485" width="0.2743%" height="15" fill="rgb(244,137,37)" fg:x="18922" fg:w="87"/><text x="59.9032%" y="495.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (87 samples, 0.27%)</title><rect x="59.6532%" y="469" width="0.2743%" height="15" fill="rgb(240,136,2)" fg:x="18922" fg:w="87"/><text x="59.9032%" y="479.50"></text></g><g><title>nalgebra::linalg::givens::GivensRotation&lt;T&gt;::cancel_y (272 samples, 0.86%)</title><rect x="59.2718%" y="501" width="0.8575%" height="15" fill="rgb(239,18,37)" fg:x="18801" fg:w="272"/><text x="59.5218%" y="511.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::to_exp (64 samples, 0.20%)</title><rect x="59.9275%" y="485" width="0.2018%" height="15" fill="rgb(218,185,22)" fg:x="19009" fg:w="64"/><text x="60.1775%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (2,486 samples, 7.84%)</title><rect x="63.7169%" y="485" width="7.8373%" height="15" fill="rgb(225,218,4)" fg:x="20211" fg:w="2486"/><text x="63.9669%" y="495.50">&lt;f32 as cor..</text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (2,638 samples, 8.32%)</title><rect x="71.5542%" y="485" width="8.3165%" height="15" fill="rgb(230,182,32)" fg:x="22697" fg:w="2638"/><text x="71.8042%" y="495.50">&lt;f32 as core..</text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::scale (2,958 samples, 9.33%)</title><rect x="79.8707%" y="485" width="9.3253%" height="15" fill="rgb(242,56,43)" fg:x="25335" fg:w="2958"/><text x="80.1207%" y="495.50">&lt;f32 as simba..</text></g><g><title>nalgebra::linalg::givens::GivensRotation&lt;T&gt;::rotate (9,856 samples, 31.07%)</title><rect x="60.1293%" y="501" width="31.0719%" height="15" fill="rgb(233,99,24)" fg:x="19073" fg:w="9856"/><text x="60.3793%" y="511.50">nalgebra::linalg::givens::GivensRotation&lt;T&gt;::rotate</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (636 samples, 2.01%)</title><rect x="89.1961%" y="485" width="2.0050%" height="15" fill="rgb(234,209,42)" fg:x="28293" fg:w="636"/><text x="89.4461%" y="495.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (636 samples, 2.01%)</title><rect x="89.1961%" y="469" width="2.0050%" height="15" fill="rgb(227,7,12)" fg:x="28293" fg:w="636"/><text x="89.4461%" y="479.50">&lt;..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (168 samples, 0.53%)</title><rect x="90.6715%" y="453" width="0.5296%" height="15" fill="rgb(245,203,43)" fg:x="28761" fg:w="168"/><text x="90.9215%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (168 samples, 0.53%)</title><rect x="90.6715%" y="437" width="0.5296%" height="15" fill="rgb(238,205,33)" fg:x="28761" fg:w="168"/><text x="90.9215%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (743 samples, 2.34%)</title><rect x="95.6337%" y="485" width="2.3424%" height="15" fill="rgb(231,56,7)" fg:x="30335" fg:w="743"/><text x="95.8837%" y="495.50">&lt;..</text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::scale (123 samples, 0.39%)</title><rect x="97.9760%" y="485" width="0.3878%" height="15" fill="rgb(244,186,29)" fg:x="31078" fg:w="123"/><text x="98.2260%" y="495.50"></text></g><g><title>nalgebra::linalg::givens::GivensRotation&lt;T&gt;::rotate_rows (2,349 samples, 7.41%)</title><rect x="91.2011%" y="501" width="7.4054%" height="15" fill="rgb(234,111,31)" fg:x="28929" fg:w="2349"/><text x="91.4511%" y="511.50">nalgebra::..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (77 samples, 0.24%)</title><rect x="98.3638%" y="485" width="0.2427%" height="15" fill="rgb(241,149,10)" fg:x="31201" fg:w="77"/><text x="98.6138%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (77 samples, 0.24%)</title><rect x="98.3638%" y="469" width="0.2427%" height="15" fill="rgb(249,206,44)" fg:x="31201" fg:w="77"/><text x="98.6138%" y="479.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (33 samples, 0.10%)</title><rect x="98.5025%" y="453" width="0.1040%" height="15" fill="rgb(251,153,30)" fg:x="31245" fg:w="33"/><text x="98.7525%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (33 samples, 0.10%)</title><rect x="98.5025%" y="437" width="0.1040%" height="15" fill="rgb(239,152,38)" fg:x="31245" fg:w="33"/><text x="98.7525%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (12 samples, 0.04%)</title><rect x="98.6349%" y="485" width="0.0378%" height="15" fill="rgb(249,139,47)" fg:x="31287" fg:w="12"/><text x="98.8849%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (6 samples, 0.02%)</title><rect x="98.6728%" y="485" width="0.0189%" height="15" fill="rgb(244,64,35)" fg:x="31299" fg:w="6"/><text x="98.9228%" y="495.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::norm1 (13 samples, 0.04%)</title><rect x="98.6917%" y="485" width="0.0410%" height="15" fill="rgb(216,46,15)" fg:x="31305" fg:w="13"/><text x="98.9417%" y="495.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (13 samples, 0.04%)</title><rect x="98.6917%" y="469" width="0.0410%" height="15" fill="rgb(250,74,19)" fg:x="31305" fg:w="13"/><text x="98.9417%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (14 samples, 0.04%)</title><rect x="98.7327%" y="485" width="0.0441%" height="15" fill="rgb(249,42,33)" fg:x="31318" fg:w="14"/><text x="98.9827%" y="495.50"></text></g><g><title>nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::delimit_subproblem (58 samples, 0.18%)</title><rect x="98.6066%" y="501" width="0.1828%" height="15" fill="rgb(242,149,17)" fg:x="31278" fg:w="58"/><text x="98.8566%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (4 samples, 0.01%)</title><rect x="98.7768%" y="485" width="0.0126%" height="15" fill="rgb(244,29,21)" fg:x="31332" fg:w="4"/><text x="99.0268%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (4 samples, 0.01%)</title><rect x="98.7768%" y="469" width="0.0126%" height="15" fill="rgb(220,130,37)" fg:x="31332" fg:w="4"/><text x="99.0268%" y="479.50"></text></g><g><title>nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::new_unordered (18,399 samples, 58.00%)</title><rect x="40.7945%" y="533" width="58.0044%" height="15" fill="rgb(211,67,2)" fg:x="12940" fg:w="18399"/><text x="41.0445%" y="543.50">nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::new_unordered</text></g><g><title>nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::try_new_unordered (18,399 samples, 58.00%)</title><rect x="40.7945%" y="517" width="58.0044%" height="15" fill="rgb(235,68,52)" fg:x="12940" fg:w="18399"/><text x="41.0445%" y="527.50">nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::try_new_unordered</text></g><g><title>nalgebra::linalg::permutation_sequence::PermutationSequence&lt;D&gt;::permute_columns (4 samples, 0.01%)</title><rect x="98.8115%" y="517" width="0.0126%" height="15" fill="rgb(246,142,3)" fg:x="31343" fg:w="4"/><text x="99.0615%" y="527.50"></text></g><g><title>nalgebra::base::edition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::swap_columns (4 samples, 0.01%)</title><rect x="98.8115%" y="501" width="0.0126%" height="15" fill="rgb(241,25,7)" fg:x="31343" fg:w="4"/><text x="99.0615%" y="511.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::swap_unchecked (4 samples, 0.01%)</title><rect x="98.8115%" y="485" width="0.0126%" height="15" fill="rgb(242,119,39)" fg:x="31343" fg:w="4"/><text x="99.0615%" y="495.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked (4 samples, 0.01%)</title><rect x="98.8115%" y="469" width="0.0126%" height="15" fill="rgb(241,98,45)" fg:x="31343" fg:w="4"/><text x="99.0615%" y="479.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked_linear (4 samples, 0.01%)</title><rect x="98.8115%" y="453" width="0.0126%" height="15" fill="rgb(254,28,30)" fg:x="31343" fg:w="4"/><text x="99.0615%" y="463.50"></text></g><g><title>core::ptr::swap (4 samples, 0.01%)</title><rect x="98.8115%" y="437" width="0.0126%" height="15" fill="rgb(241,142,54)" fg:x="31343" fg:w="4"/><text x="99.0615%" y="447.50"></text></g><g><title>core::intrinsics::copy (4 samples, 0.01%)</title><rect x="98.8115%" y="421" width="0.0126%" height="15" fill="rgb(222,85,15)" fg:x="31343" fg:w="4"/><text x="99.0615%" y="431.50"></text></g><g><title>core::intrinsics::copy (22 samples, 0.07%)</title><rect x="98.8241%" y="421" width="0.0694%" height="15" fill="rgb(210,85,47)" fg:x="31347" fg:w="22"/><text x="99.0741%" y="431.50"></text></g><g><title>gamm::basic_multi::beta_coocurring_reduction (31,364 samples, 98.88%)</title><rect x="0.0536%" y="581" width="98.8777%" height="15" fill="rgb(224,206,25)" fg:x="17" fg:w="31364"/><text x="0.3036%" y="591.50">gamm::basic_multi::beta_coocurring_reduction</text></g><g><title>nalgebra::linalg::decomposition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::svd (18,441 samples, 58.14%)</title><rect x="40.7945%" y="565" width="58.1368%" height="15" fill="rgb(243,201,19)" fg:x="12940" fg:w="18441"/><text x="41.0445%" y="575.50">nalgebra::linalg::decomposition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::svd</text></g><g><title>nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::new (18,441 samples, 58.14%)</title><rect x="40.7945%" y="549" width="58.1368%" height="15" fill="rgb(236,59,4)" fg:x="12940" fg:w="18441"/><text x="41.0445%" y="559.50">nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::new</text></g><g><title>nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::sort_by_singular_values (42 samples, 0.13%)</title><rect x="98.7989%" y="533" width="0.1324%" height="15" fill="rgb(254,179,45)" fg:x="31339" fg:w="42"/><text x="99.0489%" y="543.50"></text></g><g><title>nalgebra::linalg::permutation_sequence::PermutationSequence&lt;D&gt;::permute_rows (34 samples, 0.11%)</title><rect x="98.8241%" y="517" width="0.1072%" height="15" fill="rgb(226,14,10)" fg:x="31347" fg:w="34"/><text x="99.0741%" y="527.50"></text></g><g><title>nalgebra::base::edition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::swap_rows (34 samples, 0.11%)</title><rect x="98.8241%" y="501" width="0.1072%" height="15" fill="rgb(244,27,41)" fg:x="31347" fg:w="34"/><text x="99.0741%" y="511.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::swap_unchecked (34 samples, 0.11%)</title><rect x="98.8241%" y="485" width="0.1072%" height="15" fill="rgb(235,35,32)" fg:x="31347" fg:w="34"/><text x="99.0741%" y="495.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked (34 samples, 0.11%)</title><rect x="98.8241%" y="469" width="0.1072%" height="15" fill="rgb(218,68,31)" fg:x="31347" fg:w="34"/><text x="99.0741%" y="479.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked_linear (34 samples, 0.11%)</title><rect x="98.8241%" y="453" width="0.1072%" height="15" fill="rgb(207,120,37)" fg:x="31347" fg:w="34"/><text x="99.0741%" y="463.50"></text></g><g><title>core::ptr::swap (34 samples, 0.11%)</title><rect x="98.8241%" y="437" width="0.1072%" height="15" fill="rgb(227,98,0)" fg:x="31347" fg:w="34"/><text x="99.0741%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.04%)</title><rect x="98.8934%" y="421" width="0.0378%" height="15" fill="rgb(207,7,3)" fg:x="31369" fg:w="12"/><text x="99.1434%" y="431.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::copy_from (64 samples, 0.20%)</title><rect x="98.9313%" y="581" width="0.2018%" height="15" fill="rgb(206,98,19)" fg:x="31381" fg:w="64"/><text x="99.1813%" y="591.50"></text></g><g><title>std::panic::catch_unwind (31,448 samples, 99.14%)</title><rect x="0.0504%" y="709" width="99.1425%" height="15" fill="rgb(217,5,26)" fg:x="16" fg:w="31448"/><text x="0.3004%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (31,448 samples, 99.14%)</title><rect x="0.0504%" y="693" width="99.1425%" height="15" fill="rgb(235,190,38)" fg:x="16" fg:w="31448"/><text x="0.3004%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (31,448 samples, 99.14%)</title><rect x="0.0504%" y="677" width="99.1425%" height="15" fill="rgb(247,86,24)" fg:x="16" fg:w="31448"/><text x="0.3004%" y="687.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (31,448 samples, 99.14%)</title><rect x="0.0504%" y="661" width="99.1425%" height="15" fill="rgb(205,101,16)" fg:x="16" fg:w="31448"/><text x="0.3004%" y="671.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (31,448 samples, 99.14%)</title><rect x="0.0504%" y="645" width="99.1425%" height="15" fill="rgb(246,168,33)" fg:x="16" fg:w="31448"/><text x="0.3004%" y="655.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (31,448 samples, 99.14%)</title><rect x="0.0504%" y="629" width="99.1425%" height="15" fill="rgb(231,114,1)" fg:x="16" fg:w="31448"/><text x="0.3004%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>gamm::basic_multi::beta_coocurring_amm::{{closure}}::{{closure}}::{{closure}} (31,448 samples, 99.14%)</title><rect x="0.0504%" y="613" width="99.1425%" height="15" fill="rgb(207,184,53)" fg:x="16" fg:w="31448"/><text x="0.3004%" y="623.50">gamm::basic_multi::beta_coocurring_amm::{{closure}}::{{closure}}::{{closure}}</text></g><g><title>gamm::basic_multi::thread_task (31,448 samples, 99.14%)</title><rect x="0.0504%" y="597" width="99.1425%" height="15" fill="rgb(224,95,51)" fg:x="16" fg:w="31448"/><text x="0.3004%" y="607.50">gamm::basic_multi::thread_task</text></g><g><title>std::sync::barrier::Barrier::wait (19 samples, 0.06%)</title><rect x="99.1330%" y="581" width="0.0599%" height="15" fill="rgb(212,188,45)" fg:x="31445" fg:w="19"/><text x="99.3830%" y="591.50"></text></g><g><title>std::sync::condvar::Condvar::wait (19 samples, 0.06%)</title><rect x="99.1330%" y="565" width="0.0599%" height="15" fill="rgb(223,154,38)" fg:x="31445" fg:w="19"/><text x="99.3830%" y="575.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (19 samples, 0.06%)</title><rect x="99.1330%" y="549" width="0.0599%" height="15" fill="rgb(251,22,52)" fg:x="31445" fg:w="19"/><text x="99.3830%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (19 samples, 0.06%)</title><rect x="99.1330%" y="533" width="0.0599%" height="15" fill="rgb(229,209,22)" fg:x="31445" fg:w="19"/><text x="99.3830%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (19 samples, 0.06%)</title><rect x="99.1330%" y="517" width="0.0599%" height="15" fill="rgb(234,138,34)" fg:x="31445" fg:w="19"/><text x="99.3830%" y="527.50"></text></g><g><title>std::sys::unix::futex::futex_wait (19 samples, 0.06%)</title><rect x="99.1330%" y="501" width="0.0599%" height="15" fill="rgb(212,95,11)" fg:x="31445" fg:w="19"/><text x="99.3830%" y="511.50"></text></g><g><title>syscall (19 samples, 0.06%)</title><rect x="99.1330%" y="485" width="0.0599%" height="15" fill="rgb(240,179,47)" fg:x="31445" fg:w="19"/><text x="99.3830%" y="495.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="99.1929%" y="677" width="0.0158%" height="15" fill="rgb(240,163,11)" fg:x="31464" fg:w="5"/><text x="99.4429%" y="687.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="99.1929%" y="661" width="0.0158%" height="15" fill="rgb(236,37,12)" fg:x="31464" fg:w="5"/><text x="99.4429%" y="671.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="99.1929%" y="645" width="0.0158%" height="15" fill="rgb(232,164,16)" fg:x="31464" fg:w="5"/><text x="99.4429%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (31,455 samples, 99.16%)</title><rect x="0.0473%" y="773" width="99.1646%" height="15" fill="rgb(244,205,15)" fg:x="15" fg:w="31455"/><text x="0.2973%" y="783.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (31,454 samples, 99.16%)</title><rect x="0.0504%" y="757" width="99.1614%" height="15" fill="rgb(223,117,47)" fg:x="16" fg:w="31454"/><text x="0.3004%" y="767.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (31,454 samples, 99.16%)</title><rect x="0.0504%" y="741" width="99.1614%" height="15" fill="rgb(244,107,35)" fg:x="16" fg:w="31454"/><text x="0.3004%" y="751.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (31,454 samples, 99.16%)</title><rect x="0.0504%" y="725" width="99.1614%" height="15" fill="rgb(205,140,8)" fg:x="16" fg:w="31454"/><text x="0.3004%" y="735.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (6 samples, 0.02%)</title><rect x="99.1929%" y="709" width="0.0189%" height="15" fill="rgb(228,84,46)" fg:x="31464" fg:w="6"/><text x="99.4429%" y="719.50"></text></g><g><title>pthread_getattr_np (6 samples, 0.02%)</title><rect x="99.1929%" y="693" width="0.0189%" height="15" fill="rgb(254,188,9)" fg:x="31464" fg:w="6"/><text x="99.4429%" y="703.50"></text></g><g><title>[libc.so.6] (31,458 samples, 99.17%)</title><rect x="0.0410%" y="821" width="99.1740%" height="15" fill="rgb(206,112,54)" fg:x="13" fg:w="31458"/><text x="0.2910%" y="831.50">[libc.so.6]</text></g><g><title>[libc.so.6] (31,456 samples, 99.17%)</title><rect x="0.0473%" y="805" width="99.1677%" height="15" fill="rgb(216,84,49)" fg:x="15" fg:w="31456"/><text x="0.2973%" y="815.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (31,456 samples, 99.17%)</title><rect x="0.0473%" y="789" width="99.1677%" height="15" fill="rgb(214,194,35)" fg:x="15" fg:w="31456"/><text x="0.2973%" y="799.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="99.2150%" y="821" width="0.0189%" height="15" fill="rgb(249,28,3)" fg:x="31471" fg:w="6"/><text x="99.4650%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.03%)</title><rect x="99.2339%" y="533" width="0.0252%" height="15" fill="rgb(222,56,52)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="99.2339%" y="517" width="0.0252%" height="15" fill="rgb(245,217,50)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="99.2339%" y="501" width="0.0252%" height="15" fill="rgb(213,201,24)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="99.2339%" y="485" width="0.0252%" height="15" fill="rgb(248,116,28)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.03%)</title><rect x="99.2339%" y="469" width="0.0252%" height="15" fill="rgb(219,72,43)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.03%)</title><rect x="99.2339%" y="453" width="0.0252%" height="15" fill="rgb(209,138,14)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.03%)</title><rect x="99.2339%" y="437" width="0.0252%" height="15" fill="rgb(222,18,33)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.03%)</title><rect x="99.2339%" y="421" width="0.0252%" height="15" fill="rgb(213,199,7)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.03%)</title><rect x="99.2339%" y="405" width="0.0252%" height="15" fill="rgb(250,110,10)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="415.50"></text></g><g><title>gamm::basic_multi::beta_coocurring_amm::{{closure}} (8 samples, 0.03%)</title><rect x="99.2339%" y="389" width="0.0252%" height="15" fill="rgb(248,123,6)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="399.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;&gt;::Buffer&gt;&gt;::zeros (8 samples, 0.03%)</title><rect x="99.2339%" y="373" width="0.0252%" height="15" fill="rgb(206,91,31)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="383.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::zeros_generic (8 samples, 0.03%)</title><rect x="99.2339%" y="357" width="0.0252%" height="15" fill="rgb(211,154,13)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="367.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_element_generic (8 samples, 0.03%)</title><rect x="99.2339%" y="341" width="0.0252%" height="15" fill="rgb(225,148,7)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="351.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_iterator_generic (8 samples, 0.03%)</title><rect x="99.2339%" y="325" width="0.0252%" height="15" fill="rgb(220,160,43)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="335.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;::allocate_from_iterator (8 samples, 0.03%)</title><rect x="99.2339%" y="309" width="0.0252%" height="15" fill="rgb(213,52,39)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.03%)</title><rect x="99.2339%" y="293" width="0.0252%" height="15" fill="rgb(243,137,7)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="99.2339%" y="277" width="0.0252%" height="15" fill="rgb(230,79,13)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="99.2339%" y="261" width="0.0252%" height="15" fill="rgb(247,105,23)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="99.2339%" y="245" width="0.0252%" height="15" fill="rgb(223,179,41)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.03%)</title><rect x="99.2339%" y="229" width="0.0252%" height="15" fill="rgb(218,9,34)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.03%)</title><rect x="99.2339%" y="213" width="0.0252%" height="15" fill="rgb(222,106,8)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.03%)</title><rect x="99.2339%" y="197" width="0.0252%" height="15" fill="rgb(211,220,0)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.03%)</title><rect x="99.2339%" y="181" width="0.0252%" height="15" fill="rgb(229,52,16)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.03%)</title><rect x="99.2339%" y="165" width="0.0252%" height="15" fill="rgb(212,155,18)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (8 samples, 0.03%)</title><rect x="99.2339%" y="149" width="0.0252%" height="15" fill="rgb(242,21,14)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="159.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (8 samples, 0.03%)</title><rect x="99.2339%" y="133" width="0.0252%" height="15" fill="rgb(222,19,48)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="143.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.03%)</title><rect x="99.2339%" y="117" width="0.0252%" height="15" fill="rgb(232,45,27)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="127.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (8 samples, 0.03%)</title><rect x="99.2339%" y="101" width="0.0252%" height="15" fill="rgb(249,103,42)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.03%)</title><rect x="99.2339%" y="85" width="0.0252%" height="15" fill="rgb(246,81,33)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (8 samples, 0.03%)</title><rect x="99.2339%" y="69" width="0.0252%" height="15" fill="rgb(252,33,42)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="79.50"></text></g><g><title>core::ptr::write (8 samples, 0.03%)</title><rect x="99.2339%" y="53" width="0.0252%" height="15" fill="rgb(209,212,41)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="63.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="99.2339%" y="37" width="0.0252%" height="15" fill="rgb(207,154,6)" fg:x="31477" fg:w="8"/><text x="99.4839%" y="47.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::SMultiplyAdd&gt;::multiply_add (20 samples, 0.06%)</title><rect x="99.2686%" y="341" width="0.0631%" height="15" fill="rgb(223,64,47)" fg:x="31488" fg:w="20"/><text x="99.5186%" y="351.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_ps (20 samples, 0.06%)</title><rect x="99.2686%" y="325" width="0.0631%" height="15" fill="rgb(211,161,38)" fg:x="31488" fg:w="20"/><text x="99.5186%" y="335.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (28 samples, 0.09%)</title><rect x="99.2686%" y="437" width="0.0883%" height="15" fill="rgb(219,138,40)" fg:x="31488" fg:w="28"/><text x="99.5186%" y="447.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (28 samples, 0.09%)</title><rect x="99.2686%" y="421" width="0.0883%" height="15" fill="rgb(241,228,46)" fg:x="31488" fg:w="28"/><text x="99.5186%" y="431.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::{{closure}} (28 samples, 0.09%)</title><rect x="99.2686%" y="405" width="0.0883%" height="15" fill="rgb(223,209,38)" fg:x="31488" fg:w="28"/><text x="99.5186%" y="415.50"></text></g><g><title>&lt;matrixmultiply::sgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (28 samples, 0.09%)</title><rect x="99.2686%" y="389" width="0.0883%" height="15" fill="rgb(236,164,45)" fg:x="31488" fg:w="28"/><text x="99.5186%" y="399.50"></text></g><g><title>matrixmultiply::sgemm_kernel::kernel_target_fma (28 samples, 0.09%)</title><rect x="99.2686%" y="373" width="0.0883%" height="15" fill="rgb(231,15,5)" fg:x="31488" fg:w="28"/><text x="99.5186%" y="383.50"></text></g><g><title>matrixmultiply::sgemm_kernel::kernel_x86_avx (28 samples, 0.09%)</title><rect x="99.2686%" y="357" width="0.0883%" height="15" fill="rgb(252,35,15)" fg:x="31488" fg:w="28"/><text x="99.5186%" y="367.50"></text></g><g><title>gamm::basic_multi::beta_coocurring_amm (41 samples, 0.13%)</title><rect x="99.2339%" y="549" width="0.1293%" height="15" fill="rgb(248,181,18)" fg:x="31477" fg:w="41"/><text x="99.4839%" y="559.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (31 samples, 0.10%)</title><rect x="99.2654%" y="533" width="0.0977%" height="15" fill="rgb(233,39,42)" fg:x="31487" fg:w="31"/><text x="99.5154%" y="543.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (31 samples, 0.10%)</title><rect x="99.2654%" y="517" width="0.0977%" height="15" fill="rgb(238,110,33)" fg:x="31487" fg:w="31"/><text x="99.5154%" y="527.50"></text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (31 samples, 0.10%)</title><rect x="99.2654%" y="501" width="0.0977%" height="15" fill="rgb(233,195,10)" fg:x="31487" fg:w="31"/><text x="99.5154%" y="511.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop (31 samples, 0.10%)</title><rect x="99.2654%" y="485" width="0.0977%" height="15" fill="rgb(254,105,3)" fg:x="31487" fg:w="31"/><text x="99.5154%" y="495.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (30 samples, 0.09%)</title><rect x="99.2686%" y="469" width="0.0946%" height="15" fill="rgb(221,225,9)" fg:x="31488" fg:w="30"/><text x="99.5186%" y="479.50"></text></g><g><title>matrixmultiply::gemm::gemm_loop::{{closure}} (30 samples, 0.09%)</title><rect x="99.2686%" y="453" width="0.0946%" height="15" fill="rgb(224,227,45)" fg:x="31488" fg:w="30"/><text x="99.5186%" y="463.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact::{{closure}} (12 samples, 0.04%)</title><rect x="99.7478%" y="485" width="0.0378%" height="15" fill="rgb(229,198,43)" fg:x="31640" fg:w="12"/><text x="99.9978%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.04%)</title><rect x="99.7478%" y="469" width="0.0378%" height="15" fill="rgb(206,209,35)" fg:x="31640" fg:w="12"/><text x="99.9978%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.04%)</title><rect x="99.7478%" y="453" width="0.0378%" height="15" fill="rgb(245,195,53)" fg:x="31640" fg:w="12"/><text x="99.9978%" y="463.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume_with (44 samples, 0.14%)</title><rect x="99.7320%" y="501" width="0.1387%" height="15" fill="rgb(240,92,26)" fg:x="31635" fg:w="44"/><text x="99.9820%" y="511.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::buffer (27 samples, 0.09%)</title><rect x="99.7856%" y="485" width="0.0851%" height="15" fill="rgb(207,40,23)" fg:x="31652" fg:w="27"/><text x="100.0356%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.02%)</title><rect x="99.8550%" y="469" width="0.0158%" height="15" fill="rgb(223,111,35)" fg:x="31674" fg:w="5"/><text x="100.1050%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.02%)</title><rect x="99.8550%" y="453" width="0.0158%" height="15" fill="rgb(229,147,28)" fg:x="31674" fg:w="5"/><text x="100.1050%" y="463.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (46 samples, 0.15%)</title><rect x="99.7320%" y="517" width="0.1450%" height="15" fill="rgb(211,29,28)" fg:x="31635" fg:w="46"/><text x="99.9820%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.02%)</title><rect x="99.8770%" y="517" width="0.0189%" height="15" fill="rgb(228,72,33)" fg:x="31681" fg:w="6"/><text x="100.1270%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.02%)</title><rect x="99.8770%" y="501" width="0.0189%" height="15" fill="rgb(205,214,31)" fg:x="31681" fg:w="6"/><text x="100.1270%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.02%)</title><rect x="99.8770%" y="485" width="0.0189%" height="15" fill="rgb(224,111,15)" fg:x="31681" fg:w="6"/><text x="100.1270%" y="495.50"></text></g><g><title>all (31,720 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(253,21,26)" fg:x="0" fg:w="31720"/><text x="0.2500%" y="863.50"></text></g><g><title>basic_multi_amm (31,720 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(245,139,43)" fg:x="0" fg:w="31720"/><text x="0.2500%" y="847.50">basic_multi_amm</text></g><g><title>_start (243 samples, 0.77%)</title><rect x="99.2339%" y="821" width="0.7661%" height="15" fill="rgb(252,170,7)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="831.50"></text></g><g><title>__libc_start_main (243 samples, 0.77%)</title><rect x="99.2339%" y="805" width="0.7661%" height="15" fill="rgb(231,118,14)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="815.50"></text></g><g><title>[libc.so.6] (243 samples, 0.77%)</title><rect x="99.2339%" y="789" width="0.7661%" height="15" fill="rgb(238,83,0)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="799.50"></text></g><g><title>main (243 samples, 0.77%)</title><rect x="99.2339%" y="773" width="0.7661%" height="15" fill="rgb(221,39,39)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="783.50"></text></g><g><title>std::rt::lang_start_internal (243 samples, 0.77%)</title><rect x="99.2339%" y="757" width="0.7661%" height="15" fill="rgb(222,119,46)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="767.50"></text></g><g><title>std::panic::catch_unwind (243 samples, 0.77%)</title><rect x="99.2339%" y="741" width="0.7661%" height="15" fill="rgb(222,165,49)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="751.50"></text></g><g><title>std::panicking::try (243 samples, 0.77%)</title><rect x="99.2339%" y="725" width="0.7661%" height="15" fill="rgb(219,113,52)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="735.50"></text></g><g><title>std::panicking::try::do_call (243 samples, 0.77%)</title><rect x="99.2339%" y="709" width="0.7661%" height="15" fill="rgb(214,7,15)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="719.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (243 samples, 0.77%)</title><rect x="99.2339%" y="693" width="0.7661%" height="15" fill="rgb(235,32,4)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="703.50"></text></g><g><title>std::panic::catch_unwind (243 samples, 0.77%)</title><rect x="99.2339%" y="677" width="0.7661%" height="15" fill="rgb(238,90,54)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="687.50"></text></g><g><title>std::panicking::try (243 samples, 0.77%)</title><rect x="99.2339%" y="661" width="0.7661%" height="15" fill="rgb(213,208,19)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="671.50"></text></g><g><title>std::panicking::try::do_call (243 samples, 0.77%)</title><rect x="99.2339%" y="645" width="0.7661%" height="15" fill="rgb(233,156,4)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (243 samples, 0.77%)</title><rect x="99.2339%" y="629" width="0.7661%" height="15" fill="rgb(207,194,5)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="639.50"></text></g><g><title>std::rt::lang_start::{{closure}} (243 samples, 0.77%)</title><rect x="99.2339%" y="613" width="0.7661%" height="15" fill="rgb(206,111,30)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="623.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (243 samples, 0.77%)</title><rect x="99.2339%" y="597" width="0.7661%" height="15" fill="rgb(243,70,54)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (243 samples, 0.77%)</title><rect x="99.2339%" y="581" width="0.7661%" height="15" fill="rgb(242,28,8)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="591.50"></text></g><g><title>basic_multi_amm::main (243 samples, 0.77%)</title><rect x="99.2339%" y="565" width="0.7661%" height="15" fill="rgb(219,106,18)" fg:x="31477" fg:w="243"/><text x="99.4839%" y="575.50"></text></g><g><title>gamm::load_matrices (202 samples, 0.64%)</title><rect x="99.3632%" y="549" width="0.6368%" height="15" fill="rgb(244,222,10)" fg:x="31518" fg:w="202"/><text x="99.6132%" y="559.50"></text></g><g><title>gamm::load_matrix (202 samples, 0.64%)</title><rect x="99.3632%" y="533" width="0.6368%" height="15" fill="rgb(236,179,52)" fg:x="31518" fg:w="202"/><text x="99.6132%" y="543.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;&gt;::Buffer&gt;&gt;::zeros (33 samples, 0.10%)</title><rect x="99.8960%" y="517" width="0.1040%" height="15" fill="rgb(213,23,39)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="527.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::zeros_generic (33 samples, 0.10%)</title><rect x="99.8960%" y="501" width="0.1040%" height="15" fill="rgb(238,48,10)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="511.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_element_generic (33 samples, 0.10%)</title><rect x="99.8960%" y="485" width="0.1040%" height="15" fill="rgb(251,196,23)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="495.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_iterator_generic (33 samples, 0.10%)</title><rect x="99.8960%" y="469" width="0.1040%" height="15" fill="rgb(250,152,24)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="479.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;::allocate_from_iterator (33 samples, 0.10%)</title><rect x="99.8960%" y="453" width="0.1040%" height="15" fill="rgb(209,150,17)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (33 samples, 0.10%)</title><rect x="99.8960%" y="437" width="0.1040%" height="15" fill="rgb(234,202,34)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (33 samples, 0.10%)</title><rect x="99.8960%" y="421" width="0.1040%" height="15" fill="rgb(253,148,53)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 0.10%)</title><rect x="99.8960%" y="405" width="0.1040%" height="15" fill="rgb(218,129,16)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (33 samples, 0.10%)</title><rect x="99.8960%" y="389" width="0.1040%" height="15" fill="rgb(216,85,19)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (33 samples, 0.10%)</title><rect x="99.8960%" y="373" width="0.1040%" height="15" fill="rgb(235,228,7)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (33 samples, 0.10%)</title><rect x="99.8960%" y="357" width="0.1040%" height="15" fill="rgb(245,175,0)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.10%)</title><rect x="99.8960%" y="341" width="0.1040%" height="15" fill="rgb(208,168,36)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (33 samples, 0.10%)</title><rect x="99.8960%" y="325" width="0.1040%" height="15" fill="rgb(246,171,24)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (33 samples, 0.10%)</title><rect x="99.8960%" y="309" width="0.1040%" height="15" fill="rgb(215,142,24)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (33 samples, 0.10%)</title><rect x="99.8960%" y="293" width="0.1040%" height="15" fill="rgb(250,187,7)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="303.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (33 samples, 0.10%)</title><rect x="99.8960%" y="277" width="0.1040%" height="15" fill="rgb(228,66,33)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="287.50"></text></g><g><title>core::ops::function::Fn::call (33 samples, 0.10%)</title><rect x="99.8960%" y="261" width="0.1040%" height="15" fill="rgb(234,215,21)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="271.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (33 samples, 0.10%)</title><rect x="99.8960%" y="245" width="0.1040%" height="15" fill="rgb(222,191,20)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (33 samples, 0.10%)</title><rect x="99.8960%" y="229" width="0.1040%" height="15" fill="rgb(245,79,54)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (33 samples, 0.10%)</title><rect x="99.8960%" y="213" width="0.1040%" height="15" fill="rgb(240,10,37)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="223.50"></text></g><g><title>core::ptr::write (33 samples, 0.10%)</title><rect x="99.8960%" y="197" width="0.1040%" height="15" fill="rgb(214,192,32)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="207.50"></text></g><g><title>[libc.so.6] (33 samples, 0.10%)</title><rect x="99.8960%" y="181" width="0.1040%" height="15" fill="rgb(209,36,54)" fg:x="31687" fg:w="33"/><text x="100.1460%" y="191.50"></text></g></svg></svg>