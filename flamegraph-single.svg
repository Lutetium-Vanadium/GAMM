<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="821.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="14335"><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.05%)</title><rect x="0.0070%" y="757" width="0.0488%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="7"/><text x="0.2570%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.01%)</title><rect x="0.0419%" y="741" width="0.0140%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="2"/><text x="0.2919%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0558%" y="757" width="0.0209%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="3"/><text x="0.3058%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.03%)</title><rect x="0.3418%" y="453" width="0.0349%" height="15" fill="rgb(248,212,6)" fg:x="49" fg:w="5"/><text x="0.5918%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.03%)</title><rect x="0.3418%" y="437" width="0.0349%" height="15" fill="rgb(208,68,35)" fg:x="49" fg:w="5"/><text x="0.5918%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.03%)</title><rect x="0.3488%" y="421" width="0.0279%" height="15" fill="rgb(232,128,0)" fg:x="50" fg:w="4"/><text x="0.5988%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (671 samples, 4.68%)</title><rect x="2.9717%" y="389" width="4.6809%" height="15" fill="rgb(207,160,47)" fg:x="426" fg:w="671"/><text x="3.2217%" y="399.50">&lt;f32 ..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (1,080 samples, 7.53%)</title><rect x="0.3767%" y="453" width="7.5340%" height="15" fill="rgb(228,23,34)" fg:x="54" fg:w="1080"/><text x="0.6267%" y="463.50">nalgebra::..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (1,080 samples, 7.53%)</title><rect x="0.3767%" y="437" width="7.5340%" height="15" fill="rgb(218,30,26)" fg:x="54" fg:w="1080"/><text x="0.6267%" y="447.50">nalgebra::..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (1,080 samples, 7.53%)</title><rect x="0.3767%" y="421" width="7.5340%" height="15" fill="rgb(220,122,19)" fg:x="54" fg:w="1080"/><text x="0.6267%" y="431.50">nalgebra::..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (1,080 samples, 7.53%)</title><rect x="0.3767%" y="405" width="7.5340%" height="15" fill="rgb(250,228,42)" fg:x="54" fg:w="1080"/><text x="0.6267%" y="415.50">nalgebra::..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (37 samples, 0.26%)</title><rect x="7.6526%" y="389" width="0.2581%" height="15" fill="rgb(240,193,28)" fg:x="1097" fg:w="37"/><text x="7.9026%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (37 samples, 0.26%)</title><rect x="7.6526%" y="373" width="0.2581%" height="15" fill="rgb(216,20,37)" fg:x="1097" fg:w="37"/><text x="7.9026%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (32 samples, 0.22%)</title><rect x="7.6875%" y="357" width="0.2232%" height="15" fill="rgb(206,188,39)" fg:x="1102" fg:w="32"/><text x="7.9375%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (32 samples, 0.22%)</title><rect x="7.6875%" y="341" width="0.2232%" height="15" fill="rgb(217,207,13)" fg:x="1102" fg:w="32"/><text x="7.9375%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (16 samples, 0.11%)</title><rect x="17.2654%" y="421" width="0.1116%" height="15" fill="rgb(231,73,38)" fg:x="2475" fg:w="16"/><text x="17.5154%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (1,715 samples, 11.96%)</title><rect x="17.3770%" y="421" width="11.9637%" height="15" fill="rgb(225,20,46)" fg:x="2491" fg:w="1715"/><text x="17.6270%" y="431.50">&lt;f32 as core::ops:..</text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (417 samples, 2.91%)</title><rect x="29.3408%" y="421" width="2.9090%" height="15" fill="rgb(210,31,41)" fg:x="4206" fg:w="417"/><text x="29.5908%" y="431.50">&lt;f..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (3,495 samples, 24.38%)</title><rect x="7.9107%" y="453" width="24.3809%" height="15" fill="rgb(221,200,47)" fg:x="1134" fg:w="3495"/><text x="8.1607%" y="463.50">nalgebra::base::blas::&lt;impl nalgebra::b..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (3,495 samples, 24.38%)</title><rect x="7.9107%" y="437" width="24.3809%" height="15" fill="rgb(226,26,5)" fg:x="1134" fg:w="3495"/><text x="8.1607%" y="447.50">nalgebra::base::blas::&lt;impl nalgebra::b..</text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked (6 samples, 0.04%)</title><rect x="32.2497%" y="421" width="0.0419%" height="15" fill="rgb(249,33,26)" fg:x="4623" fg:w="6"/><text x="32.4997%" y="431.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (6 samples, 0.04%)</title><rect x="32.2497%" y="405" width="0.0419%" height="15" fill="rgb(235,183,28)" fg:x="4623" fg:w="6"/><text x="32.4997%" y="415.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (6 samples, 0.04%)</title><rect x="32.2497%" y="389" width="0.0419%" height="15" fill="rgb(221,5,38)" fg:x="4623" fg:w="6"/><text x="32.4997%" y="399.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked_linear (6 samples, 0.04%)</title><rect x="32.2497%" y="373" width="0.0419%" height="15" fill="rgb(247,18,42)" fg:x="4623" fg:w="6"/><text x="32.4997%" y="383.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked_linear (6 samples, 0.04%)</title><rect x="32.2497%" y="357" width="0.0419%" height="15" fill="rgb(241,131,45)" fg:x="4623" fg:w="6"/><text x="32.4997%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (6 samples, 0.04%)</title><rect x="32.2497%" y="341" width="0.0419%" height="15" fill="rgb(249,31,29)" fg:x="4623" fg:w="6"/><text x="32.4997%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (6 samples, 0.04%)</title><rect x="32.2497%" y="325" width="0.0419%" height="15" fill="rgb(225,111,53)" fg:x="4623" fg:w="6"/><text x="32.4997%" y="335.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut (28 samples, 0.20%)</title><rect x="32.2916%" y="453" width="0.1953%" height="15" fill="rgb(238,160,17)" fg:x="4629" fg:w="28"/><text x="32.5416%" y="463.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::apply (28 samples, 0.20%)</title><rect x="32.2916%" y="437" width="0.1953%" height="15" fill="rgb(214,148,48)" fg:x="4629" fg:w="28"/><text x="32.5416%" y="447.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut::{{closure}} (27 samples, 0.19%)</title><rect x="32.2986%" y="421" width="0.1884%" height="15" fill="rgb(232,36,49)" fg:x="4630" fg:w="27"/><text x="32.5486%" y="431.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_unscale (20 samples, 0.14%)</title><rect x="32.3474%" y="405" width="0.1395%" height="15" fill="rgb(209,103,24)" fg:x="4637" fg:w="20"/><text x="32.5974%" y="415.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::unscale (20 samples, 0.14%)</title><rect x="32.3474%" y="389" width="0.1395%" height="15" fill="rgb(229,88,8)" fg:x="4637" fg:w="20"/><text x="32.5974%" y="399.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (5 samples, 0.03%)</title><rect x="32.4939%" y="421" width="0.0349%" height="15" fill="rgb(213,181,19)" fg:x="4658" fg:w="5"/><text x="32.7439%" y="431.50"></text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::columns_range_pair_mut (7 samples, 0.05%)</title><rect x="32.4869%" y="453" width="0.0488%" height="15" fill="rgb(254,191,54)" fg:x="4657" fg:w="7"/><text x="32.7369%" y="463.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (6 samples, 0.04%)</title><rect x="32.4939%" y="437" width="0.0419%" height="15" fill="rgb(241,83,37)" fg:x="4658" fg:w="6"/><text x="32.7439%" y="447.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (11 samples, 0.08%)</title><rect x="32.5358%" y="453" width="0.0767%" height="15" fill="rgb(233,36,39)" fg:x="4664" fg:w="11"/><text x="32.7858%" y="463.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (11 samples, 0.08%)</title><rect x="32.5358%" y="437" width="0.0767%" height="15" fill="rgb(226,3,54)" fg:x="4664" fg:w="11"/><text x="32.7858%" y="447.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (11 samples, 0.08%)</title><rect x="32.5358%" y="421" width="0.0767%" height="15" fill="rgb(245,192,40)" fg:x="4664" fg:w="11"/><text x="32.7858%" y="431.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (11 samples, 0.08%)</title><rect x="32.5358%" y="405" width="0.0767%" height="15" fill="rgb(238,167,29)" fg:x="4664" fg:w="11"/><text x="32.7858%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (10 samples, 0.07%)</title><rect x="32.5427%" y="389" width="0.0698%" height="15" fill="rgb(232,182,51)" fg:x="4665" fg:w="10"/><text x="32.7927%" y="399.50"></text></g><g><title>gamm::common::qr (4,671 samples, 32.58%)</title><rect x="0.0767%" y="469" width="32.5846%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="4671"/><text x="0.3267%" y="479.50">gamm::common::qr</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::IndexMut&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index_mut (7 samples, 0.05%)</title><rect x="32.6125%" y="453" width="0.0488%" height="15" fill="rgb(208,69,12)" fg:x="4675" fg:w="7"/><text x="32.8625%" y="463.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (4 samples, 0.03%)</title><rect x="32.6334%" y="437" width="0.0279%" height="15" fill="rgb(235,93,37)" fg:x="4678" fg:w="4"/><text x="32.8834%" y="447.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndexMut&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (4 samples, 0.03%)</title><rect x="32.6334%" y="421" width="0.0279%" height="15" fill="rgb(213,116,39)" fg:x="4678" fg:w="4"/><text x="32.8834%" y="431.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_unchecked_mut (4 samples, 0.03%)</title><rect x="32.6334%" y="405" width="0.0279%" height="15" fill="rgb(222,207,29)" fg:x="4678" fg:w="4"/><text x="32.8834%" y="415.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (4 samples, 0.03%)</title><rect x="32.6334%" y="389" width="0.0279%" height="15" fill="rgb(206,96,30)" fg:x="4678" fg:w="4"/><text x="32.8834%" y="399.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (4 samples, 0.03%)</title><rect x="32.6334%" y="373" width="0.0279%" height="15" fill="rgb(218,138,4)" fg:x="4678" fg:w="4"/><text x="32.8834%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="32.6613%" y="325" width="0.0209%" height="15" fill="rgb(250,191,14)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.02%)</title><rect x="32.6613%" y="309" width="0.0209%" height="15" fill="rgb(239,60,40)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="32.6613%" y="293" width="0.0209%" height="15" fill="rgb(206,27,48)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="32.6613%" y="277" width="0.0209%" height="15" fill="rgb(225,35,8)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="32.6613%" y="261" width="0.0209%" height="15" fill="rgb(250,213,24)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (3 samples, 0.02%)</title><rect x="32.6613%" y="245" width="0.0209%" height="15" fill="rgb(247,123,22)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="255.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (3 samples, 0.02%)</title><rect x="32.6613%" y="229" width="0.0209%" height="15" fill="rgb(231,138,38)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="239.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="32.6613%" y="213" width="0.0209%" height="15" fill="rgb(231,145,46)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="223.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (3 samples, 0.02%)</title><rect x="32.6613%" y="197" width="0.0209%" height="15" fill="rgb(251,118,11)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="32.6613%" y="181" width="0.0209%" height="15" fill="rgb(217,147,25)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (3 samples, 0.02%)</title><rect x="32.6613%" y="165" width="0.0209%" height="15" fill="rgb(247,81,37)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="175.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="32.6613%" y="149" width="0.0209%" height="15" fill="rgb(209,12,38)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="159.50"></text></g><g><title>[libc.so.6] (3 samples, 0.02%)</title><rect x="32.6613%" y="133" width="0.0209%" height="15" fill="rgb(227,1,9)" fg:x="4682" fg:w="3"/><text x="32.9113%" y="143.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;&gt;::Buffer&gt;&gt;::zeros (4 samples, 0.03%)</title><rect x="32.6613%" y="469" width="0.0279%" height="15" fill="rgb(248,47,43)" fg:x="4682" fg:w="4"/><text x="32.9113%" y="479.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::zeros_generic (4 samples, 0.03%)</title><rect x="32.6613%" y="453" width="0.0279%" height="15" fill="rgb(221,10,30)" fg:x="4682" fg:w="4"/><text x="32.9113%" y="463.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_element_generic (4 samples, 0.03%)</title><rect x="32.6613%" y="437" width="0.0279%" height="15" fill="rgb(210,229,1)" fg:x="4682" fg:w="4"/><text x="32.9113%" y="447.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_iterator_generic (4 samples, 0.03%)</title><rect x="32.6613%" y="421" width="0.0279%" height="15" fill="rgb(222,148,37)" fg:x="4682" fg:w="4"/><text x="32.9113%" y="431.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;::allocate_from_iterator (4 samples, 0.03%)</title><rect x="32.6613%" y="405" width="0.0279%" height="15" fill="rgb(234,67,33)" fg:x="4682" fg:w="4"/><text x="32.9113%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.03%)</title><rect x="32.6613%" y="389" width="0.0279%" height="15" fill="rgb(247,98,35)" fg:x="4682" fg:w="4"/><text x="32.9113%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="32.6613%" y="373" width="0.0279%" height="15" fill="rgb(247,138,52)" fg:x="4682" fg:w="4"/><text x="32.9113%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="32.6613%" y="357" width="0.0279%" height="15" fill="rgb(213,79,30)" fg:x="4682" fg:w="4"/><text x="32.9113%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="32.6613%" y="341" width="0.0279%" height="15" fill="rgb(246,177,23)" fg:x="4682" fg:w="4"/><text x="32.9113%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="32.6892%" y="293" width="0.0209%" height="15" fill="rgb(230,62,27)" fg:x="4686" fg:w="3"/><text x="32.9392%" y="303.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="32.6892%" y="277" width="0.0209%" height="15" fill="rgb(216,154,8)" fg:x="4686" fg:w="3"/><text x="32.9392%" y="287.50"></text></g><g><title>nalgebra::base::conversion::&lt;impl core::convert::From&lt;nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dynamic,C,nalgebra::base::matrix_slice::SliceStorage&lt;T,nalgebra::base::dimension::Dynamic,C,RStride,CStride&gt;&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dynamic,C,nalgebra::base::vec_storage::VecStorage&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;&gt;::from (5 samples, 0.03%)</title><rect x="32.6892%" y="469" width="0.0349%" height="15" fill="rgb(244,35,45)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="479.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned (5 samples, 0.03%)</title><rect x="32.6892%" y="453" width="0.0349%" height="15" fill="rgb(251,115,12)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="463.50"></text></g><g><title>&lt;nalgebra::base::matrix_slice::SliceStorage&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::into_owned (5 samples, 0.03%)</title><rect x="32.6892%" y="437" width="0.0349%" height="15" fill="rgb(240,54,50)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="447.50"></text></g><g><title>&lt;nalgebra::base::matrix_slice::SliceStorage&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::clone_owned (5 samples, 0.03%)</title><rect x="32.6892%" y="421" width="0.0349%" height="15" fill="rgb(233,84,52)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="431.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;::allocate_from_iterator (5 samples, 0.03%)</title><rect x="32.6892%" y="405" width="0.0349%" height="15" fill="rgb(207,117,47)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.03%)</title><rect x="32.6892%" y="389" width="0.0349%" height="15" fill="rgb(249,43,39)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.03%)</title><rect x="32.6892%" y="373" width="0.0349%" height="15" fill="rgb(209,38,44)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.03%)</title><rect x="32.6892%" y="357" width="0.0349%" height="15" fill="rgb(236,212,23)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.03%)</title><rect x="32.6892%" y="341" width="0.0349%" height="15" fill="rgb(242,79,21)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.03%)</title><rect x="32.6892%" y="325" width="0.0349%" height="15" fill="rgb(211,96,35)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.03%)</title><rect x="32.6892%" y="309" width="0.0349%" height="15" fill="rgb(253,215,40)" fg:x="4686" fg:w="5"/><text x="32.9392%" y="319.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="32.7101%" y="293" width="0.0140%" height="15" fill="rgb(211,81,21)" fg:x="4689" fg:w="2"/><text x="32.9601%" y="303.50"></text></g><g><title>nalgebra::base::edition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::set_column (16 samples, 0.11%)</title><rect x="32.7241%" y="469" width="0.1116%" height="15" fill="rgb(208,190,38)" fg:x="4691" fg:w="16"/><text x="32.9741%" y="479.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::copy_from (16 samples, 0.11%)</title><rect x="32.7241%" y="453" width="0.1116%" height="15" fill="rgb(235,213,38)" fg:x="4691" fg:w="16"/><text x="32.9741%" y="463.50"></text></g><g><title>core::intrinsics::copy (5 samples, 0.03%)</title><rect x="32.8357%" y="389" width="0.0349%" height="15" fill="rgb(237,122,38)" fg:x="4707" fg:w="5"/><text x="33.0857%" y="399.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,D,D,S&gt;::transpose_mut (8 samples, 0.06%)</title><rect x="32.8357%" y="469" width="0.0558%" height="15" fill="rgb(244,218,35)" fg:x="4707" fg:w="8"/><text x="33.0857%" y="479.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::swap_unchecked (8 samples, 0.06%)</title><rect x="32.8357%" y="453" width="0.0558%" height="15" fill="rgb(240,68,47)" fg:x="4707" fg:w="8"/><text x="33.0857%" y="463.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked (8 samples, 0.06%)</title><rect x="32.8357%" y="437" width="0.0558%" height="15" fill="rgb(210,16,53)" fg:x="4707" fg:w="8"/><text x="33.0857%" y="447.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked_linear (8 samples, 0.06%)</title><rect x="32.8357%" y="421" width="0.0558%" height="15" fill="rgb(235,124,12)" fg:x="4707" fg:w="8"/><text x="33.0857%" y="431.50"></text></g><g><title>core::ptr::swap (8 samples, 0.06%)</title><rect x="32.8357%" y="405" width="0.0558%" height="15" fill="rgb(224,169,11)" fg:x="4707" fg:w="8"/><text x="33.0857%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="32.8706%" y="389" width="0.0209%" height="15" fill="rgb(250,166,2)" fg:x="4712" fg:w="3"/><text x="33.1206%" y="399.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::scale_mut (3 samples, 0.02%)</title><rect x="32.8915%" y="469" width="0.0209%" height="15" fill="rgb(242,216,29)" fg:x="4715" fg:w="3"/><text x="33.1415%" y="479.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::apply (3 samples, 0.02%)</title><rect x="32.8915%" y="453" width="0.0209%" height="15" fill="rgb(230,116,27)" fg:x="4715" fg:w="3"/><text x="33.1415%" y="463.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::scale_mut::{{closure}} (3 samples, 0.02%)</title><rect x="32.8915%" y="437" width="0.0209%" height="15" fill="rgb(228,99,48)" fg:x="4715" fg:w="3"/><text x="33.1415%" y="447.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_scale (3 samples, 0.02%)</title><rect x="32.8915%" y="421" width="0.0209%" height="15" fill="rgb(253,11,6)" fg:x="4715" fg:w="3"/><text x="33.1415%" y="431.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::scale (3 samples, 0.02%)</title><rect x="32.8915%" y="405" width="0.0209%" height="15" fill="rgb(247,143,39)" fg:x="4715" fg:w="3"/><text x="33.1415%" y="415.50"></text></g><g><title>matrixmultiply::gemm::pack (17 samples, 0.12%)</title><rect x="32.9125%" y="405" width="0.1186%" height="15" fill="rgb(236,97,10)" fg:x="4718" fg:w="17"/><text x="33.1625%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.12%)</title><rect x="32.9125%" y="389" width="0.1186%" height="15" fill="rgb(233,208,19)" fg:x="4718" fg:w="17"/><text x="33.1625%" y="399.50"></text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="33.0450%" y="341" width="0.0209%" height="15" fill="rgb(216,164,2)" fg:x="4737" fg:w="3"/><text x="33.2950%" y="351.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::SMultiplyAdd&gt;::multiply_add (931 samples, 6.49%)</title><rect x="33.2682%" y="277" width="6.4946%" height="15" fill="rgb(220,129,5)" fg:x="4769" fg:w="931"/><text x="33.5182%" y="287.50">&lt;matrixmu..</text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_ps (931 samples, 6.49%)</title><rect x="33.2682%" y="261" width="6.4946%" height="15" fill="rgb(242,17,10)" fg:x="4769" fg:w="931"/><text x="33.5182%" y="271.50">core::cor..</text></g><g><title>core::core_arch::x86::avx::_mm256_load_ps (25 samples, 0.17%)</title><rect x="39.7628%" y="277" width="0.1744%" height="15" fill="rgb(242,107,0)" fg:x="5700" fg:w="25"/><text x="40.0128%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_ps (11 samples, 0.08%)</title><rect x="39.9372%" y="277" width="0.0767%" height="15" fill="rgb(251,28,31)" fg:x="5725" fg:w="11"/><text x="40.1872%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.08%)</title><rect x="39.9372%" y="261" width="0.0767%" height="15" fill="rgb(233,223,10)" fg:x="5725" fg:w="11"/><text x="40.1872%" y="271.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_movehdup_ps (32 samples, 0.22%)</title><rect x="40.0140%" y="277" width="0.2232%" height="15" fill="rgb(215,21,27)" fg:x="5736" fg:w="32"/><text x="40.2640%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_moveldup_ps (27 samples, 0.19%)</title><rect x="40.2372%" y="277" width="0.1884%" height="15" fill="rgb(232,23,21)" fg:x="5768" fg:w="27"/><text x="40.4872%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_ps (115 samples, 0.80%)</title><rect x="40.4325%" y="277" width="0.8022%" height="15" fill="rgb(244,5,23)" fg:x="5796" fg:w="115"/><text x="40.6825%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute_ps (69 samples, 0.48%)</title><rect x="41.2347%" y="277" width="0.4813%" height="15" fill="rgb(226,81,46)" fg:x="5911" fg:w="69"/><text x="41.4847%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_shuffle_ps (5 samples, 0.03%)</title><rect x="41.7161%" y="277" width="0.0349%" height="15" fill="rgb(247,70,30)" fg:x="5980" fg:w="5"/><text x="41.9661%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_ps (8 samples, 0.06%)</title><rect x="41.7510%" y="277" width="0.0558%" height="15" fill="rgb(212,68,19)" fg:x="5985" fg:w="8"/><text x="42.0010%" y="287.50"></text></g><g><title>&lt;matrixmultiply::sgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (1,268 samples, 8.85%)</title><rect x="33.0659%" y="325" width="8.8455%" height="15" fill="rgb(240,187,13)" fg:x="4740" fg:w="1268"/><text x="33.3159%" y="335.50">&lt;matrixmulti..</text></g><g><title>matrixmultiply::sgemm_kernel::kernel_target_fma (1,268 samples, 8.85%)</title><rect x="33.0659%" y="309" width="8.8455%" height="15" fill="rgb(223,113,26)" fg:x="4740" fg:w="1268"/><text x="33.3159%" y="319.50">matrixmultip..</text></g><g><title>matrixmultiply::sgemm_kernel::kernel_x86_avx (1,268 samples, 8.85%)</title><rect x="33.0659%" y="293" width="8.8455%" height="15" fill="rgb(206,192,2)" fg:x="4740" fg:w="1268"/><text x="33.3159%" y="303.50">matrixmultip..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15 samples, 0.10%)</title><rect x="41.8068%" y="277" width="0.1046%" height="15" fill="rgb(241,108,4)" fg:x="5993" fg:w="15"/><text x="42.0568%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15 samples, 0.10%)</title><rect x="41.8068%" y="261" width="0.1046%" height="15" fill="rgb(247,173,49)" fg:x="5993" fg:w="15"/><text x="42.0568%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8 samples, 0.06%)</title><rect x="41.8556%" y="245" width="0.0558%" height="15" fill="rgb(224,114,35)" fg:x="6000" fg:w="8"/><text x="42.1056%" y="255.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (1,274 samples, 8.89%)</title><rect x="33.0380%" y="373" width="8.8873%" height="15" fill="rgb(245,159,27)" fg:x="4736" fg:w="1274"/><text x="33.2880%" y="383.50">matrixmultipl..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (1,274 samples, 8.89%)</title><rect x="33.0380%" y="357" width="8.8873%" height="15" fill="rgb(245,172,44)" fg:x="4736" fg:w="1274"/><text x="33.2880%" y="367.50">matrixmultipl..</text></g><g><title>matrixmultiply::gemm::gemm_packed::{{closure}} (1,270 samples, 8.86%)</title><rect x="33.0659%" y="341" width="8.8594%" height="15" fill="rgb(236,23,11)" fg:x="4740" fg:w="1270"/><text x="33.3159%" y="351.50">matrixmultipl..</text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="41.9114%" y="325" width="0.0140%" height="15" fill="rgb(205,117,38)" fg:x="6008" fg:w="2"/><text x="42.1614%" y="335.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (1,331 samples, 9.28%)</title><rect x="32.9125%" y="469" width="9.2850%" height="15" fill="rgb(237,72,25)" fg:x="4718" fg:w="1331"/><text x="33.1625%" y="479.50">nalgebra::bas..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (1,331 samples, 9.28%)</title><rect x="32.9125%" y="453" width="9.2850%" height="15" fill="rgb(244,70,9)" fg:x="4718" fg:w="1331"/><text x="33.1625%" y="463.50">nalgebra::bas..</text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (1,331 samples, 9.28%)</title><rect x="32.9125%" y="437" width="9.2850%" height="15" fill="rgb(217,125,39)" fg:x="4718" fg:w="1331"/><text x="33.1625%" y="447.50">nalgebra::bas..</text></g><g><title>matrixmultiply::gemm::gemm_loop (1,331 samples, 9.28%)</title><rect x="32.9125%" y="421" width="9.2850%" height="15" fill="rgb(235,36,10)" fg:x="4718" fg:w="1331"/><text x="33.1625%" y="431.50">matrixmultipl..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (1,314 samples, 9.17%)</title><rect x="33.0310%" y="405" width="9.1664%" height="15" fill="rgb(251,123,47)" fg:x="4735" fg:w="1314"/><text x="33.2810%" y="415.50">matrixmultipl..</text></g><g><title>matrixmultiply::gemm::gemm_loop::{{closure}} (1,314 samples, 9.17%)</title><rect x="33.0310%" y="389" width="9.1664%" height="15" fill="rgb(221,13,13)" fg:x="4735" fg:w="1314"/><text x="33.2810%" y="399.50">matrixmultipl..</text></g><g><title>matrixmultiply::gemm::pack (39 samples, 0.27%)</title><rect x="41.9254%" y="373" width="0.2721%" height="15" fill="rgb(238,131,9)" fg:x="6010" fg:w="39"/><text x="42.1754%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.27%)</title><rect x="41.9254%" y="357" width="0.2721%" height="15" fill="rgb(211,50,8)" fg:x="6010" fg:w="39"/><text x="42.1754%" y="367.50"></text></g><g><title>matrixmultiply::gemm::pack (3 samples, 0.02%)</title><rect x="42.1974%" y="405" width="0.0209%" height="15" fill="rgb(245,182,24)" fg:x="6049" fg:w="3"/><text x="42.4474%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="42.1974%" y="389" width="0.0209%" height="15" fill="rgb(242,14,37)" fg:x="6049" fg:w="3"/><text x="42.4474%" y="399.50"></text></g><g><title>&lt;matrixmultiply::x86::FusedMulAdd as matrixmultiply::x86::SMultiplyAdd&gt;::multiply_add (181 samples, 1.26%)</title><rect x="42.2811%" y="277" width="1.2626%" height="15" fill="rgb(246,228,12)" fg:x="6061" fg:w="181"/><text x="42.5311%" y="287.50"></text></g><g><title>core::core_arch::x86::fma::_mm256_fmadd_ps (181 samples, 1.26%)</title><rect x="42.2811%" y="261" width="1.2626%" height="15" fill="rgb(213,55,15)" fg:x="6061" fg:w="181"/><text x="42.5311%" y="271.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_load_ps (4 samples, 0.03%)</title><rect x="43.5438%" y="277" width="0.0279%" height="15" fill="rgb(209,9,3)" fg:x="6242" fg:w="4"/><text x="43.7938%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_movehdup_ps (7 samples, 0.05%)</title><rect x="43.5717%" y="277" width="0.0488%" height="15" fill="rgb(230,59,30)" fg:x="6246" fg:w="7"/><text x="43.8217%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_moveldup_ps (8 samples, 0.06%)</title><rect x="43.6205%" y="277" width="0.0558%" height="15" fill="rgb(209,121,21)" fg:x="6253" fg:w="8"/><text x="43.8705%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute2f128_ps (23 samples, 0.16%)</title><rect x="43.6763%" y="277" width="0.1604%" height="15" fill="rgb(220,109,13)" fg:x="6261" fg:w="23"/><text x="43.9263%" y="287.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_permute_ps (17 samples, 0.12%)</title><rect x="43.8368%" y="277" width="0.1186%" height="15" fill="rgb(232,18,1)" fg:x="6284" fg:w="17"/><text x="44.0868%" y="287.50"></text></g><g><title>&lt;matrixmultiply::sgemm_kernel::KernelFma as matrixmultiply::kernel::GemmKernel&gt;::kernel (251 samples, 1.75%)</title><rect x="42.2183%" y="325" width="1.7510%" height="15" fill="rgb(215,41,42)" fg:x="6052" fg:w="251"/><text x="42.4683%" y="335.50"></text></g><g><title>matrixmultiply::sgemm_kernel::kernel_target_fma (251 samples, 1.75%)</title><rect x="42.2183%" y="309" width="1.7510%" height="15" fill="rgb(224,123,36)" fg:x="6052" fg:w="251"/><text x="42.4683%" y="319.50"></text></g><g><title>matrixmultiply::sgemm_kernel::kernel_x86_avx (250 samples, 1.74%)</title><rect x="42.2253%" y="293" width="1.7440%" height="15" fill="rgb(240,125,3)" fg:x="6053" fg:w="250"/><text x="42.4753%" y="303.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed (253 samples, 1.76%)</title><rect x="42.2183%" y="373" width="1.7649%" height="15" fill="rgb(205,98,50)" fg:x="6052" fg:w="253"/><text x="42.4683%" y="383.50"></text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (253 samples, 1.76%)</title><rect x="42.2183%" y="357" width="1.7649%" height="15" fill="rgb(205,185,37)" fg:x="6052" fg:w="253"/><text x="42.4683%" y="367.50"></text></g><g><title>matrixmultiply::gemm::gemm_packed::{{closure}} (253 samples, 1.76%)</title><rect x="42.2183%" y="341" width="1.7649%" height="15" fill="rgb(238,207,15)" fg:x="6052" fg:w="253"/><text x="42.4683%" y="351.50"></text></g><g><title>&lt;matrixmultiply::util::RangeChunk as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="43.9693%" y="325" width="0.0140%" height="15" fill="rgb(213,199,42)" fg:x="6303" fg:w="2"/><text x="44.2193%" y="335.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::MulAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C1,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul_assign (258 samples, 1.80%)</title><rect x="42.1974%" y="469" width="1.7998%" height="15" fill="rgb(235,201,11)" fg:x="6049" fg:w="258"/><text x="42.4474%" y="479.50">n..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (258 samples, 1.80%)</title><rect x="42.1974%" y="453" width="1.7998%" height="15" fill="rgb(207,46,11)" fg:x="6049" fg:w="258"/><text x="42.4474%" y="463.50">n..</text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (258 samples, 1.80%)</title><rect x="42.1974%" y="437" width="1.7998%" height="15" fill="rgb(241,35,35)" fg:x="6049" fg:w="258"/><text x="42.4474%" y="447.50">n..</text></g><g><title>matrixmultiply::gemm::gemm_loop (258 samples, 1.80%)</title><rect x="42.1974%" y="421" width="1.7998%" height="15" fill="rgb(243,32,47)" fg:x="6049" fg:w="258"/><text x="42.4474%" y="431.50">m..</text></g><g><title>matrixmultiply::threading::RangeChunkParallel&lt;G&gt;::for_each (255 samples, 1.78%)</title><rect x="42.2183%" y="405" width="1.7789%" height="15" fill="rgb(247,202,23)" fg:x="6052" fg:w="255"/><text x="42.4683%" y="415.50">m..</text></g><g><title>matrixmultiply::gemm::gemm_loop::{{closure}} (255 samples, 1.78%)</title><rect x="42.2183%" y="389" width="1.7789%" height="15" fill="rgb(219,102,11)" fg:x="6052" fg:w="255"/><text x="42.4683%" y="399.50">m..</text></g><g><title>matrixmultiply::gemm::pack (2 samples, 0.01%)</title><rect x="43.9833%" y="373" width="0.0140%" height="15" fill="rgb(243,110,44)" fg:x="6305" fg:w="2"/><text x="44.2333%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="43.9833%" y="357" width="0.0140%" height="15" fill="rgb(222,74,54)" fg:x="6305" fg:w="2"/><text x="44.2333%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.11%)</title><rect x="44.9599%" y="405" width="0.1116%" height="15" fill="rgb(216,99,12)" fg:x="6445" fg:w="16"/><text x="45.2099%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.11%)</title><rect x="44.9599%" y="389" width="0.1116%" height="15" fill="rgb(226,22,26)" fg:x="6445" fg:w="16"/><text x="45.2099%" y="399.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut (2 samples, 0.01%)</title><rect x="45.0715%" y="405" width="0.0140%" height="15" fill="rgb(217,163,10)" fg:x="6461" fg:w="2"/><text x="45.3215%" y="415.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::apply (2 samples, 0.01%)</title><rect x="45.0715%" y="389" width="0.0140%" height="15" fill="rgb(213,25,53)" fg:x="6461" fg:w="2"/><text x="45.3215%" y="399.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut::{{closure}} (2 samples, 0.01%)</title><rect x="45.0715%" y="373" width="0.0140%" height="15" fill="rgb(252,105,26)" fg:x="6461" fg:w="2"/><text x="45.3215%" y="383.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="45.0855%" y="357" width="0.0419%" height="15" fill="rgb(220,39,43)" fg:x="6463" fg:w="6"/><text x="45.3355%" y="367.50"></text></g><g><title>nalgebra::base::min_max::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::camax (29 samples, 0.20%)</title><rect x="45.0855%" y="405" width="0.2023%" height="15" fill="rgb(229,68,48)" fg:x="6463" fg:w="29"/><text x="45.3355%" y="415.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::fold_with (29 samples, 0.20%)</title><rect x="45.0855%" y="389" width="0.2023%" height="15" fill="rgb(252,8,32)" fg:x="6463" fg:w="29"/><text x="45.3355%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (29 samples, 0.20%)</title><rect x="45.0855%" y="373" width="0.2023%" height="15" fill="rgb(223,20,43)" fg:x="6463" fg:w="29"/><text x="45.3355%" y="383.50"></text></g><g><title>nalgebra::base::min_max::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::camax::{{closure}} (23 samples, 0.16%)</title><rect x="45.1273%" y="357" width="0.1604%" height="15" fill="rgb(229,81,49)" fg:x="6469" fg:w="23"/><text x="45.3773%" y="367.50"></text></g><g><title>&lt;T as simba::simd::simd_partial_ord::SimdPartialOrd&gt;::simd_max (23 samples, 0.16%)</title><rect x="45.1273%" y="341" width="0.1604%" height="15" fill="rgb(236,28,36)" fg:x="6469" fg:w="23"/><text x="45.3773%" y="351.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::vector_to_matrix_index (7 samples, 0.05%)</title><rect x="45.2878%" y="389" width="0.0488%" height="15" fill="rgb(249,185,26)" fg:x="6492" fg:w="7"/><text x="45.5378%" y="399.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (17 samples, 0.12%)</title><rect x="45.2878%" y="405" width="0.1186%" height="15" fill="rgb(249,174,33)" fg:x="6492" fg:w="17"/><text x="45.5378%" y="415.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (10 samples, 0.07%)</title><rect x="45.3366%" y="389" width="0.0698%" height="15" fill="rgb(233,201,37)" fg:x="6499" fg:w="10"/><text x="45.5866%" y="399.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::vector_to_matrix_index (3 samples, 0.02%)</title><rect x="45.4063%" y="389" width="0.0209%" height="15" fill="rgb(221,78,26)" fg:x="6509" fg:w="3"/><text x="45.6563%" y="399.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::IndexMut&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index_mut (8 samples, 0.06%)</title><rect x="45.4063%" y="405" width="0.0558%" height="15" fill="rgb(250,127,30)" fg:x="6509" fg:w="8"/><text x="45.6563%" y="415.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::IndexMut&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index_mut (5 samples, 0.03%)</title><rect x="45.4273%" y="389" width="0.0349%" height="15" fill="rgb(230,49,44)" fg:x="6512" fg:w="5"/><text x="45.6773%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Neg&gt;::neg (6 samples, 0.04%)</title><rect x="45.4691%" y="389" width="0.0419%" height="15" fill="rgb(229,67,23)" fg:x="6518" fg:w="6"/><text x="45.7191%" y="399.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::neg_mut (10 samples, 0.07%)</title><rect x="45.4622%" y="405" width="0.0698%" height="15" fill="rgb(249,83,47)" fg:x="6517" fg:w="10"/><text x="45.7122%" y="415.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIterMut&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="45.5110%" y="389" width="0.0209%" height="15" fill="rgb(215,43,3)" fg:x="6524" fg:w="3"/><text x="45.7610%" y="399.50"></text></g><g><title>nalgebra::linalg::bidiagonal::Bidiagonal&lt;T,R,C&gt;::is_upper_diagonal (2 samples, 0.01%)</title><rect x="45.5319%" y="405" width="0.0140%" height="15" fill="rgb(238,154,13)" fg:x="6527" fg:w="2"/><text x="45.7819%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (10 samples, 0.07%)</title><rect x="45.5459%" y="357" width="0.0698%" height="15" fill="rgb(219,56,2)" fg:x="6529" fg:w="10"/><text x="45.7959%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (8 samples, 0.06%)</title><rect x="45.6156%" y="357" width="0.0558%" height="15" fill="rgb(233,0,4)" fg:x="6539" fg:w="8"/><text x="45.8656%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (39 samples, 0.27%)</title><rect x="45.9784%" y="293" width="0.2721%" height="15" fill="rgb(235,30,7)" fg:x="6591" fg:w="39"/><text x="46.2284%" y="303.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (125 samples, 0.87%)</title><rect x="46.2504%" y="293" width="0.8720%" height="15" fill="rgb(250,79,13)" fg:x="6630" fg:w="125"/><text x="46.5004%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (23 samples, 0.16%)</title><rect x="47.2689%" y="261" width="0.1604%" height="15" fill="rgb(211,146,34)" fg:x="6776" fg:w="23"/><text x="47.5189%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (23 samples, 0.16%)</title><rect x="47.2689%" y="245" width="0.1604%" height="15" fill="rgb(228,22,38)" fg:x="6776" fg:w="23"/><text x="47.5189%" y="255.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (252 samples, 1.76%)</title><rect x="45.6784%" y="357" width="1.7579%" height="15" fill="rgb(235,168,5)" fg:x="6548" fg:w="252"/><text x="45.9284%" y="367.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (252 samples, 1.76%)</title><rect x="45.6784%" y="341" width="1.7579%" height="15" fill="rgb(221,155,16)" fg:x="6548" fg:w="252"/><text x="45.9284%" y="351.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (252 samples, 1.76%)</title><rect x="45.6784%" y="325" width="1.7579%" height="15" fill="rgb(215,215,53)" fg:x="6548" fg:w="252"/><text x="45.9284%" y="335.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (252 samples, 1.76%)</title><rect x="45.6784%" y="309" width="1.7579%" height="15" fill="rgb(223,4,10)" fg:x="6548" fg:w="252"/><text x="45.9284%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (45 samples, 0.31%)</title><rect x="47.1224%" y="293" width="0.3139%" height="15" fill="rgb(234,103,6)" fg:x="6755" fg:w="45"/><text x="47.3724%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (45 samples, 0.31%)</title><rect x="47.1224%" y="277" width="0.3139%" height="15" fill="rgb(227,97,0)" fg:x="6755" fg:w="45"/><text x="47.3724%" y="287.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (257 samples, 1.79%)</title><rect x="49.0129%" y="325" width="1.7928%" height="15" fill="rgb(234,150,53)" fg:x="7026" fg:w="257"/><text x="49.2629%" y="335.50">&lt;..</text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (76 samples, 0.53%)</title><rect x="50.8057%" y="325" width="0.5302%" height="15" fill="rgb(228,201,54)" fg:x="7283" fg:w="76"/><text x="51.0557%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="51.3359%" y="325" width="0.0209%" height="15" fill="rgb(222,22,37)" fg:x="7359" fg:w="3"/><text x="51.5859%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="51.3359%" y="309" width="0.0209%" height="15" fill="rgb(237,53,32)" fg:x="7359" fg:w="3"/><text x="51.5859%" y="319.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.01%)</title><rect x="51.3429%" y="293" width="0.0140%" height="15" fill="rgb(233,25,53)" fg:x="7360" fg:w="2"/><text x="51.5929%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.01%)</title><rect x="51.3429%" y="277" width="0.0140%" height="15" fill="rgb(210,40,34)" fg:x="7360" fg:w="2"/><text x="51.5929%" y="287.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (564 samples, 3.93%)</title><rect x="47.4363%" y="357" width="3.9344%" height="15" fill="rgb(241,220,44)" fg:x="6800" fg:w="564"/><text x="47.6863%" y="367.50">nalg..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (564 samples, 3.93%)</title><rect x="47.4363%" y="341" width="3.9344%" height="15" fill="rgb(235,28,35)" fg:x="6800" fg:w="564"/><text x="47.6863%" y="351.50">nalg..</text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="51.3568%" y="325" width="0.0140%" height="15" fill="rgb(210,56,17)" fg:x="7362" fg:w="2"/><text x="51.6068%" y="335.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndex&lt;T,R,C,S&gt;&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="51.3568%" y="309" width="0.0140%" height="15" fill="rgb(224,130,29)" fg:x="7362" fg:w="2"/><text x="51.6068%" y="319.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked (2 samples, 0.01%)</title><rect x="51.3568%" y="293" width="0.0140%" height="15" fill="rgb(235,212,8)" fg:x="7362" fg:w="2"/><text x="51.6068%" y="303.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_unchecked_linear (2 samples, 0.01%)</title><rect x="51.3568%" y="277" width="0.0140%" height="15" fill="rgb(223,33,50)" fg:x="7362" fg:w="2"/><text x="51.6068%" y="287.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked_linear (2 samples, 0.01%)</title><rect x="51.3568%" y="261" width="0.0140%" height="15" fill="rgb(219,149,13)" fg:x="7362" fg:w="2"/><text x="51.6068%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="51.3568%" y="245" width="0.0140%" height="15" fill="rgb(250,156,29)" fg:x="7362" fg:w="2"/><text x="51.6068%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (2 samples, 0.01%)</title><rect x="51.3568%" y="229" width="0.0140%" height="15" fill="rgb(216,193,19)" fg:x="7362" fg:w="2"/><text x="51.6068%" y="239.50"></text></g><g><title>nalgebra::geometry::reflection::Reflection&lt;T,D,S&gt;::reflect_with_sign (838 samples, 5.85%)</title><rect x="45.5459%" y="373" width="5.8458%" height="15" fill="rgb(216,135,14)" fg:x="6529" fg:w="838"/><text x="45.7959%" y="383.50">nalgebr..</text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::column (3 samples, 0.02%)</title><rect x="51.3708%" y="357" width="0.0209%" height="15" fill="rgb(241,47,5)" fg:x="7364" fg:w="3"/><text x="51.6208%" y="367.50"></text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_columns (3 samples, 0.02%)</title><rect x="51.3708%" y="341" width="0.0209%" height="15" fill="rgb(233,42,35)" fg:x="7364" fg:w="3"/><text x="51.6208%" y="351.50"></text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::columns_generic (3 samples, 0.02%)</title><rect x="51.3708%" y="325" width="0.0209%" height="15" fill="rgb(231,13,6)" fg:x="7364" fg:w="3"/><text x="51.6208%" y="335.50"></text></g><g><title>nalgebra::base::matrix_slice::SliceStorage&lt;T,R,C,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;::new_unchecked (3 samples, 0.02%)</title><rect x="51.3708%" y="309" width="0.0209%" height="15" fill="rgb(207,181,40)" fg:x="7364" fg:w="3"/><text x="51.6208%" y="319.50"></text></g><g><title>nalgebra::base::matrix_slice::SliceStorage&lt;T,R,C,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;::new_with_strides_unchecked (3 samples, 0.02%)</title><rect x="51.3708%" y="293" width="0.0209%" height="15" fill="rgb(254,173,49)" fg:x="7364" fg:w="3"/><text x="51.6208%" y="303.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked (3 samples, 0.02%)</title><rect x="51.3708%" y="277" width="0.0209%" height="15" fill="rgb(221,1,38)" fg:x="7364" fg:w="3"/><text x="51.6208%" y="287.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (3 samples, 0.02%)</title><rect x="51.3708%" y="261" width="0.0209%" height="15" fill="rgb(206,124,46)" fg:x="7364" fg:w="3"/><text x="51.6208%" y="271.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut (3 samples, 0.02%)</title><rect x="51.3917%" y="357" width="0.0209%" height="15" fill="rgb(249,21,11)" fg:x="7367" fg:w="3"/><text x="51.6417%" y="367.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::apply (3 samples, 0.02%)</title><rect x="51.3917%" y="341" width="0.0209%" height="15" fill="rgb(222,201,40)" fg:x="7367" fg:w="3"/><text x="51.6417%" y="351.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut::{{closure}} (3 samples, 0.02%)</title><rect x="51.3917%" y="325" width="0.0209%" height="15" fill="rgb(235,61,29)" fg:x="7367" fg:w="3"/><text x="51.6417%" y="335.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_unscale (2 samples, 0.01%)</title><rect x="51.3987%" y="309" width="0.0140%" height="15" fill="rgb(219,207,3)" fg:x="7368" fg:w="2"/><text x="51.6487%" y="319.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::unscale (2 samples, 0.01%)</title><rect x="51.3987%" y="293" width="0.0140%" height="15" fill="rgb(222,56,46)" fg:x="7368" fg:w="2"/><text x="51.6487%" y="303.50"></text></g><g><title>nalgebra::linalg::householder::clear_column_unchecked (844 samples, 5.89%)</title><rect x="45.5459%" y="389" width="5.8877%" height="15" fill="rgb(239,76,54)" fg:x="6529" fg:w="844"/><text x="45.7959%" y="399.50">nalgebr..</text></g><g><title>nalgebra::linalg::householder::reflection_axis_mut (6 samples, 0.04%)</title><rect x="51.3917%" y="373" width="0.0419%" height="15" fill="rgb(231,124,27)" fg:x="7367" fg:w="6"/><text x="51.6417%" y="383.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (3 samples, 0.02%)</title><rect x="51.4126%" y="357" width="0.0209%" height="15" fill="rgb(249,195,6)" fg:x="7370" fg:w="3"/><text x="51.6626%" y="367.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (3 samples, 0.02%)</title><rect x="51.4126%" y="341" width="0.0209%" height="15" fill="rgb(237,174,47)" fg:x="7370" fg:w="3"/><text x="51.6626%" y="351.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (3 samples, 0.02%)</title><rect x="51.4126%" y="325" width="0.0209%" height="15" fill="rgb(206,201,31)" fg:x="7370" fg:w="3"/><text x="51.6626%" y="335.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.01%)</title><rect x="51.4196%" y="309" width="0.0140%" height="15" fill="rgb(231,57,52)" fg:x="7371" fg:w="2"/><text x="51.6696%" y="319.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::tr_copy_from (15 samples, 0.10%)</title><rect x="51.4336%" y="373" width="0.1046%" height="15" fill="rgb(248,177,22)" fg:x="7373" fg:w="15"/><text x="51.6836%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="51.5173%" y="357" width="0.0209%" height="15" fill="rgb(215,211,37)" fg:x="7385" fg:w="3"/><text x="51.7673%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="51.5173%" y="341" width="0.0209%" height="15" fill="rgb(241,128,51)" fg:x="7385" fg:w="3"/><text x="51.7673%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="51.5242%" y="325" width="0.0140%" height="15" fill="rgb(227,165,31)" fg:x="7386" fg:w="2"/><text x="51.7742%" y="335.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (2 samples, 0.01%)</title><rect x="51.5382%" y="325" width="0.0140%" height="15" fill="rgb(228,167,24)" fg:x="7388" fg:w="2"/><text x="51.7882%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="51.5521%" y="325" width="0.0140%" height="15" fill="rgb(228,143,12)" fg:x="7390" fg:w="2"/><text x="51.8021%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="51.5521%" y="309" width="0.0140%" height="15" fill="rgb(249,149,8)" fg:x="7390" fg:w="2"/><text x="51.8021%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (55 samples, 0.38%)</title><rect x="51.8940%" y="261" width="0.3837%" height="15" fill="rgb(243,35,44)" fg:x="7439" fg:w="55"/><text x="52.1440%" y="271.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (176 samples, 1.23%)</title><rect x="52.2776%" y="261" width="1.2278%" height="15" fill="rgb(246,89,9)" fg:x="7494" fg:w="176"/><text x="52.5276%" y="271.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gerc (327 samples, 2.28%)</title><rect x="51.5382%" y="357" width="2.2811%" height="15" fill="rgb(233,213,13)" fg:x="7388" fg:w="327"/><text x="51.7882%" y="367.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gerx (327 samples, 2.28%)</title><rect x="51.5382%" y="341" width="2.2811%" height="15" fill="rgb(233,141,41)" fg:x="7388" fg:w="327"/><text x="51.7882%" y="351.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (323 samples, 2.25%)</title><rect x="51.5661%" y="325" width="2.2532%" height="15" fill="rgb(239,167,4)" fg:x="7392" fg:w="323"/><text x="51.8161%" y="335.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (323 samples, 2.25%)</title><rect x="51.5661%" y="309" width="2.2532%" height="15" fill="rgb(209,217,16)" fg:x="7392" fg:w="323"/><text x="51.8161%" y="319.50">n..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (323 samples, 2.25%)</title><rect x="51.5661%" y="293" width="2.2532%" height="15" fill="rgb(219,88,35)" fg:x="7392" fg:w="323"/><text x="51.8161%" y="303.50">n..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (323 samples, 2.25%)</title><rect x="51.5661%" y="277" width="2.2532%" height="15" fill="rgb(220,193,23)" fg:x="7392" fg:w="323"/><text x="51.8161%" y="287.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (45 samples, 0.31%)</title><rect x="53.5054%" y="261" width="0.3139%" height="15" fill="rgb(230,90,52)" fg:x="7670" fg:w="45"/><text x="53.7554%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (45 samples, 0.31%)</title><rect x="53.5054%" y="245" width="0.3139%" height="15" fill="rgb(252,106,19)" fg:x="7670" fg:w="45"/><text x="53.7554%" y="255.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (31 samples, 0.22%)</title><rect x="53.6031%" y="229" width="0.2163%" height="15" fill="rgb(206,74,20)" fg:x="7684" fg:w="31"/><text x="53.8531%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (31 samples, 0.22%)</title><rect x="53.6031%" y="213" width="0.2163%" height="15" fill="rgb(230,138,44)" fg:x="7684" fg:w="31"/><text x="53.8531%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="53.8263%" y="293" width="0.0140%" height="15" fill="rgb(235,182,43)" fg:x="7716" fg:w="2"/><text x="54.0763%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="53.8263%" y="277" width="0.0140%" height="15" fill="rgb(242,16,51)" fg:x="7716" fg:w="2"/><text x="54.0763%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="53.8263%" y="261" width="0.0140%" height="15" fill="rgb(248,9,4)" fg:x="7716" fg:w="2"/><text x="54.0763%" y="271.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (80 samples, 0.56%)</title><rect x="54.0495%" y="261" width="0.5581%" height="15" fill="rgb(210,31,22)" fg:x="7748" fg:w="80"/><text x="54.2995%" y="271.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (117 samples, 0.82%)</title><rect x="54.6076%" y="261" width="0.8162%" height="15" fill="rgb(239,54,39)" fg:x="7828" fg:w="117"/><text x="54.8576%" y="271.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (23 samples, 0.16%)</title><rect x="55.4796%" y="229" width="0.1604%" height="15" fill="rgb(230,99,41)" fg:x="7953" fg:w="23"/><text x="55.7296%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (23 samples, 0.16%)</title><rect x="55.4796%" y="213" width="0.1604%" height="15" fill="rgb(253,106,12)" fg:x="7953" fg:w="23"/><text x="55.7296%" y="223.50"></text></g><g><title>nalgebra::geometry::reflection::Reflection&lt;T,D,S&gt;::reflect_rows_with_sign (589 samples, 4.11%)</title><rect x="51.5382%" y="373" width="4.1088%" height="15" fill="rgb(213,46,41)" fg:x="7388" fg:w="589"/><text x="51.7882%" y="383.50">nalg..</text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul_to (262 samples, 1.83%)</title><rect x="53.8193%" y="357" width="1.8277%" height="15" fill="rgb(215,133,35)" fg:x="7715" fg:w="262"/><text x="54.0693%" y="367.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gemm (262 samples, 1.83%)</title><rect x="53.8193%" y="341" width="1.8277%" height="15" fill="rgb(213,28,5)" fg:x="7715" fg:w="262"/><text x="54.0693%" y="351.50">n..</text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (262 samples, 1.83%)</title><rect x="53.8193%" y="325" width="1.8277%" height="15" fill="rgb(215,77,49)" fg:x="7715" fg:w="262"/><text x="54.0693%" y="335.50">n..</text></g><g><title>nalgebra::base::blas_uninit::gemv_uninit (262 samples, 1.83%)</title><rect x="53.8193%" y="309" width="1.8277%" height="15" fill="rgb(248,100,22)" fg:x="7715" fg:w="262"/><text x="54.0693%" y="319.50">n..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (259 samples, 1.81%)</title><rect x="53.8403%" y="293" width="1.8068%" height="15" fill="rgb(208,67,9)" fg:x="7718" fg:w="259"/><text x="54.0903%" y="303.50">n..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (258 samples, 1.80%)</title><rect x="53.8472%" y="277" width="1.7998%" height="15" fill="rgb(219,133,21)" fg:x="7719" fg:w="258"/><text x="54.0972%" y="287.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (32 samples, 0.22%)</title><rect x="55.4238%" y="261" width="0.2232%" height="15" fill="rgb(246,46,29)" fg:x="7945" fg:w="32"/><text x="55.6738%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (32 samples, 0.22%)</title><rect x="55.4238%" y="245" width="0.2232%" height="15" fill="rgb(246,185,52)" fg:x="7945" fg:w="32"/><text x="55.6738%" y="255.50"></text></g><g><title>nalgebra::linalg::bidiagonal::Bidiagonal&lt;T,R,C&gt;::new (1,452 samples, 10.13%)</title><rect x="45.5459%" y="405" width="10.1291%" height="15" fill="rgb(252,136,11)" fg:x="6529" fg:w="1452"/><text x="45.7959%" y="415.50">nalgebra::linal..</text></g><g><title>nalgebra::linalg::householder::clear_row_unchecked (608 samples, 4.24%)</title><rect x="51.4336%" y="389" width="4.2414%" height="15" fill="rgb(219,138,53)" fg:x="7373" fg:w="608"/><text x="51.6836%" y="399.50">nalge..</text></g><g><title>nalgebra::linalg::householder::reflection_axis_mut (4 samples, 0.03%)</title><rect x="55.6470%" y="373" width="0.0279%" height="15" fill="rgb(211,51,23)" fg:x="7977" fg:w="4"/><text x="55.8970%" y="383.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut (3 samples, 0.02%)</title><rect x="55.6540%" y="357" width="0.0209%" height="15" fill="rgb(247,221,28)" fg:x="7978" fg:w="3"/><text x="55.9040%" y="367.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::apply (3 samples, 0.02%)</title><rect x="55.6540%" y="341" width="0.0209%" height="15" fill="rgb(251,222,45)" fg:x="7978" fg:w="3"/><text x="55.9040%" y="351.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::unscale_mut::{{closure}} (3 samples, 0.02%)</title><rect x="55.6540%" y="325" width="0.0209%" height="15" fill="rgb(217,162,53)" fg:x="7978" fg:w="3"/><text x="55.9040%" y="335.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::identity_generic (4 samples, 0.03%)</title><rect x="55.6749%" y="389" width="0.0279%" height="15" fill="rgb(229,93,14)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="399.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_diagonal_element_generic (4 samples, 0.03%)</title><rect x="55.6749%" y="373" width="0.0279%" height="15" fill="rgb(209,67,49)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="383.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::zeros_generic (4 samples, 0.03%)</title><rect x="55.6749%" y="357" width="0.0279%" height="15" fill="rgb(213,87,29)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="367.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_element_generic (4 samples, 0.03%)</title><rect x="55.6749%" y="341" width="0.0279%" height="15" fill="rgb(205,151,52)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="351.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_iterator_generic (4 samples, 0.03%)</title><rect x="55.6749%" y="325" width="0.0279%" height="15" fill="rgb(253,215,39)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="335.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;::allocate_from_iterator (4 samples, 0.03%)</title><rect x="55.6749%" y="309" width="0.0279%" height="15" fill="rgb(221,220,41)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.03%)</title><rect x="55.6749%" y="293" width="0.0279%" height="15" fill="rgb(218,133,21)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="55.6749%" y="277" width="0.0279%" height="15" fill="rgb(221,193,43)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="55.6749%" y="261" width="0.0279%" height="15" fill="rgb(240,128,52)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="55.6749%" y="245" width="0.0279%" height="15" fill="rgb(253,114,12)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.03%)</title><rect x="55.6749%" y="229" width="0.0279%" height="15" fill="rgb(215,223,47)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.03%)</title><rect x="55.6749%" y="213" width="0.0279%" height="15" fill="rgb(248,225,23)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="55.6749%" y="197" width="0.0279%" height="15" fill="rgb(250,108,0)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="55.6749%" y="181" width="0.0279%" height="15" fill="rgb(228,208,7)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="55.6749%" y="165" width="0.0279%" height="15" fill="rgb(244,45,10)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (4 samples, 0.03%)</title><rect x="55.6749%" y="149" width="0.0279%" height="15" fill="rgb(207,125,25)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="159.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (4 samples, 0.03%)</title><rect x="55.6749%" y="133" width="0.0279%" height="15" fill="rgb(210,195,18)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="143.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.03%)</title><rect x="55.6749%" y="117" width="0.0279%" height="15" fill="rgb(249,80,12)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="127.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (4 samples, 0.03%)</title><rect x="55.6749%" y="101" width="0.0279%" height="15" fill="rgb(221,65,9)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.03%)</title><rect x="55.6749%" y="85" width="0.0279%" height="15" fill="rgb(235,49,36)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (4 samples, 0.03%)</title><rect x="55.6749%" y="69" width="0.0279%" height="15" fill="rgb(225,32,20)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="79.50"></text></g><g><title>core::ptr::write (4 samples, 0.03%)</title><rect x="55.6749%" y="53" width="0.0279%" height="15" fill="rgb(215,141,46)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="63.50"></text></g><g><title>[libc.so.6] (4 samples, 0.03%)</title><rect x="55.6749%" y="37" width="0.0279%" height="15" fill="rgb(250,160,47)" fg:x="7981" fg:w="4"/><text x="55.9249%" y="47.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (10 samples, 0.07%)</title><rect x="55.7517%" y="373" width="0.0698%" height="15" fill="rgb(216,222,40)" fg:x="7992" fg:w="10"/><text x="56.0017%" y="383.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (8 samples, 0.06%)</title><rect x="55.8214%" y="373" width="0.0558%" height="15" fill="rgb(234,217,39)" fg:x="8002" fg:w="8"/><text x="56.0714%" y="383.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (34 samples, 0.24%)</title><rect x="56.1632%" y="309" width="0.2372%" height="15" fill="rgb(207,178,40)" fg:x="8051" fg:w="34"/><text x="56.4132%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (110 samples, 0.77%)</title><rect x="56.4004%" y="309" width="0.7674%" height="15" fill="rgb(221,136,13)" fg:x="8085" fg:w="110"/><text x="56.6504%" y="319.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (221 samples, 1.54%)</title><rect x="55.8842%" y="373" width="1.5417%" height="15" fill="rgb(249,199,10)" fg:x="8011" fg:w="221"/><text x="56.1342%" y="383.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (221 samples, 1.54%)</title><rect x="55.8842%" y="357" width="1.5417%" height="15" fill="rgb(249,222,13)" fg:x="8011" fg:w="221"/><text x="56.1342%" y="367.50"></text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (221 samples, 1.54%)</title><rect x="55.8842%" y="341" width="1.5417%" height="15" fill="rgb(244,185,38)" fg:x="8011" fg:w="221"/><text x="56.1342%" y="351.50"></text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (221 samples, 1.54%)</title><rect x="55.8842%" y="325" width="1.5417%" height="15" fill="rgb(236,202,9)" fg:x="8011" fg:w="221"/><text x="56.1342%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (37 samples, 0.26%)</title><rect x="57.1678%" y="309" width="0.2581%" height="15" fill="rgb(250,229,37)" fg:x="8195" fg:w="37"/><text x="57.4178%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (37 samples, 0.26%)</title><rect x="57.1678%" y="293" width="0.2581%" height="15" fill="rgb(206,174,23)" fg:x="8195" fg:w="37"/><text x="57.4178%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (21 samples, 0.15%)</title><rect x="57.2794%" y="277" width="0.1465%" height="15" fill="rgb(211,33,43)" fg:x="8211" fg:w="21"/><text x="57.5294%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (21 samples, 0.15%)</title><rect x="57.2794%" y="261" width="0.1465%" height="15" fill="rgb(245,58,50)" fg:x="8211" fg:w="21"/><text x="57.5294%" y="271.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (4 samples, 0.03%)</title><rect x="59.0164%" y="341" width="0.0279%" height="15" fill="rgb(244,68,36)" fg:x="8460" fg:w="4"/><text x="59.2664%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (272 samples, 1.90%)</title><rect x="59.0443%" y="341" width="1.8975%" height="15" fill="rgb(232,229,15)" fg:x="8464" fg:w="272"/><text x="59.2943%" y="351.50">&lt;..</text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (71 samples, 0.50%)</title><rect x="60.9418%" y="341" width="0.4953%" height="15" fill="rgb(254,30,23)" fg:x="8736" fg:w="71"/><text x="61.1918%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.04%)</title><rect x="61.4370%" y="341" width="0.0419%" height="15" fill="rgb(235,160,14)" fg:x="8807" fg:w="6"/><text x="61.6870%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.04%)</title><rect x="61.4370%" y="325" width="0.0419%" height="15" fill="rgb(212,155,44)" fg:x="8807" fg:w="6"/><text x="61.6870%" y="335.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.02%)</title><rect x="61.4580%" y="309" width="0.0209%" height="15" fill="rgb(226,2,50)" fg:x="8810" fg:w="3"/><text x="61.7080%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.02%)</title><rect x="61.4580%" y="293" width="0.0209%" height="15" fill="rgb(234,177,6)" fg:x="8810" fg:w="3"/><text x="61.7080%" y="303.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (582 samples, 4.06%)</title><rect x="57.4259%" y="373" width="4.0600%" height="15" fill="rgb(217,24,9)" fg:x="8232" fg:w="582"/><text x="57.6759%" y="383.50">nalg..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (582 samples, 4.06%)</title><rect x="57.4259%" y="357" width="4.0600%" height="15" fill="rgb(220,13,46)" fg:x="8232" fg:w="582"/><text x="57.6759%" y="367.50">nalg..</text></g><g><title>nalgebra::linalg::bidiagonal::Bidiagonal&lt;T,R,C&gt;::u (835 samples, 5.82%)</title><rect x="55.6749%" y="405" width="5.8249%" height="15" fill="rgb(239,221,27)" fg:x="7981" fg:w="835"/><text x="55.9249%" y="415.50">nalgebr..</text></g><g><title>nalgebra::geometry::reflection::Reflection&lt;T,D,S&gt;::reflect_with_sign (831 samples, 5.80%)</title><rect x="55.7028%" y="389" width="5.7970%" height="15" fill="rgb(222,198,25)" fg:x="7985" fg:w="831"/><text x="55.9528%" y="399.50">nalgebr..</text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::column (2 samples, 0.01%)</title><rect x="61.4859%" y="373" width="0.0140%" height="15" fill="rgb(211,99,13)" fg:x="8814" fg:w="2"/><text x="61.7359%" y="383.50"></text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_columns (2 samples, 0.01%)</title><rect x="61.4859%" y="357" width="0.0140%" height="15" fill="rgb(232,111,31)" fg:x="8814" fg:w="2"/><text x="61.7359%" y="367.50"></text></g><g><title>nalgebra::base::matrix_slice::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::columns_generic (2 samples, 0.01%)</title><rect x="61.4859%" y="341" width="0.0140%" height="15" fill="rgb(245,82,37)" fg:x="8814" fg:w="2"/><text x="61.7359%" y="351.50"></text></g><g><title>nalgebra::base::matrix_slice::SliceStorage&lt;T,R,C,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="61.4859%" y="325" width="0.0140%" height="15" fill="rgb(227,149,46)" fg:x="8814" fg:w="2"/><text x="61.7359%" y="335.50"></text></g><g><title>nalgebra::base::matrix_slice::SliceStorage&lt;T,R,C,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;::new_with_strides_unchecked (2 samples, 0.01%)</title><rect x="61.4859%" y="309" width="0.0140%" height="15" fill="rgb(218,36,50)" fg:x="8814" fg:w="2"/><text x="61.7359%" y="319.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked (2 samples, 0.01%)</title><rect x="61.4859%" y="293" width="0.0140%" height="15" fill="rgb(226,80,48)" fg:x="8814" fg:w="2"/><text x="61.7359%" y="303.50"></text></g><g><title>nalgebra::base::storage::RawStorage::linear_index (2 samples, 0.01%)</title><rect x="61.4859%" y="277" width="0.0140%" height="15" fill="rgb(238,224,15)" fg:x="8814" fg:w="2"/><text x="61.7359%" y="287.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::tr_copy_from (11 samples, 0.08%)</title><rect x="61.5068%" y="389" width="0.0767%" height="15" fill="rgb(241,136,10)" fg:x="8817" fg:w="11"/><text x="61.7568%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (2 samples, 0.01%)</title><rect x="61.5835%" y="341" width="0.0140%" height="15" fill="rgb(208,32,45)" fg:x="8828" fg:w="2"/><text x="61.8335%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.04%)</title><rect x="61.5975%" y="341" width="0.0419%" height="15" fill="rgb(207,135,9)" fg:x="8830" fg:w="6"/><text x="61.8475%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.04%)</title><rect x="61.5975%" y="325" width="0.0419%" height="15" fill="rgb(206,86,44)" fg:x="8830" fg:w="6"/><text x="61.8475%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.03%)</title><rect x="61.6114%" y="309" width="0.0279%" height="15" fill="rgb(245,177,15)" fg:x="8832" fg:w="4"/><text x="61.8614%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (66 samples, 0.46%)</title><rect x="61.9393%" y="277" width="0.4604%" height="15" fill="rgb(206,64,50)" fg:x="8879" fg:w="66"/><text x="62.1893%" y="287.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (185 samples, 1.29%)</title><rect x="62.3997%" y="277" width="1.2905%" height="15" fill="rgb(234,36,40)" fg:x="8945" fg:w="185"/><text x="62.6497%" y="287.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gerc (329 samples, 2.30%)</title><rect x="61.5835%" y="373" width="2.2951%" height="15" fill="rgb(213,64,8)" fg:x="8828" fg:w="329"/><text x="61.8335%" y="383.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gerx (329 samples, 2.30%)</title><rect x="61.5835%" y="357" width="2.2951%" height="15" fill="rgb(210,75,36)" fg:x="8828" fg:w="329"/><text x="61.8335%" y="367.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axpy (321 samples, 2.24%)</title><rect x="61.6393%" y="341" width="2.2393%" height="15" fill="rgb(229,88,21)" fg:x="8836" fg:w="321"/><text x="61.8893%" y="351.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,D,nalgebra::base::dimension::Const&lt;1_usize&gt;,S&gt;&gt;::axcpy (321 samples, 2.24%)</title><rect x="61.6393%" y="325" width="2.2393%" height="15" fill="rgb(252,204,47)" fg:x="8836" fg:w="321"/><text x="61.8893%" y="335.50">n..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (321 samples, 2.24%)</title><rect x="61.6393%" y="309" width="2.2393%" height="15" fill="rgb(208,77,27)" fg:x="8836" fg:w="321"/><text x="61.8893%" y="319.50">n..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (321 samples, 2.24%)</title><rect x="61.6393%" y="293" width="2.2393%" height="15" fill="rgb(221,76,26)" fg:x="8836" fg:w="321"/><text x="61.8893%" y="303.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (27 samples, 0.19%)</title><rect x="63.6903%" y="277" width="0.1884%" height="15" fill="rgb(225,139,18)" fg:x="9130" fg:w="27"/><text x="63.9403%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (27 samples, 0.19%)</title><rect x="63.6903%" y="261" width="0.1884%" height="15" fill="rgb(230,137,11)" fg:x="9130" fg:w="27"/><text x="63.9403%" y="271.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (18 samples, 0.13%)</title><rect x="63.7531%" y="245" width="0.1256%" height="15" fill="rgb(212,28,1)" fg:x="9139" fg:w="18"/><text x="64.0031%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (18 samples, 0.13%)</title><rect x="63.7531%" y="229" width="0.1256%" height="15" fill="rgb(248,164,17)" fg:x="9139" fg:w="18"/><text x="64.0031%" y="239.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (74 samples, 0.52%)</title><rect x="64.6320%" y="277" width="0.5162%" height="15" fill="rgb(222,171,42)" fg:x="9265" fg:w="74"/><text x="64.8820%" y="287.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (105 samples, 0.73%)</title><rect x="65.1482%" y="277" width="0.7325%" height="15" fill="rgb(243,84,45)" fg:x="9339" fg:w="105"/><text x="65.3982%" y="287.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (13 samples, 0.09%)</title><rect x="65.9505%" y="245" width="0.0907%" height="15" fill="rgb(252,49,23)" fg:x="9454" fg:w="13"/><text x="66.2005%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (13 samples, 0.09%)</title><rect x="65.9505%" y="229" width="0.0907%" height="15" fill="rgb(215,19,7)" fg:x="9454" fg:w="13"/><text x="66.2005%" y="239.50"></text></g><g><title>nalgebra::linalg::bidiagonal::Bidiagonal&lt;T,R,C&gt;::v_t (652 samples, 4.55%)</title><rect x="61.4998%" y="405" width="4.5483%" height="15" fill="rgb(238,81,41)" fg:x="8816" fg:w="652"/><text x="61.7498%" y="415.50">nalge..</text></g><g><title>nalgebra::geometry::reflection::Reflection&lt;T,D,S&gt;::reflect_rows_with_sign (640 samples, 4.46%)</title><rect x="61.5835%" y="389" width="4.4646%" height="15" fill="rgb(210,199,37)" fg:x="8828" fg:w="640"/><text x="61.8335%" y="399.50">nalge..</text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul_to (311 samples, 2.17%)</title><rect x="63.8786%" y="373" width="2.1695%" height="15" fill="rgb(244,192,49)" fg:x="9157" fg:w="311"/><text x="64.1286%" y="383.50">n..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,S&gt;&gt;::gemm (311 samples, 2.17%)</title><rect x="63.8786%" y="357" width="2.1695%" height="15" fill="rgb(226,211,11)" fg:x="9157" fg:w="311"/><text x="64.1286%" y="367.50">n..</text></g><g><title>nalgebra::base::blas_uninit::gemm_uninit (311 samples, 2.17%)</title><rect x="63.8786%" y="341" width="2.1695%" height="15" fill="rgb(236,162,54)" fg:x="9157" fg:w="311"/><text x="64.1286%" y="351.50">n..</text></g><g><title>nalgebra::base::blas_uninit::gemv_uninit (311 samples, 2.17%)</title><rect x="63.8786%" y="325" width="2.1695%" height="15" fill="rgb(220,229,9)" fg:x="9157" fg:w="311"/><text x="64.1286%" y="335.50">n..</text></g><g><title>nalgebra::base::blas_uninit::axcpy_uninit (310 samples, 2.16%)</title><rect x="63.8856%" y="309" width="2.1625%" height="15" fill="rgb(250,87,22)" fg:x="9158" fg:w="310"/><text x="64.1356%" y="319.50">n..</text></g><g><title>nalgebra::base::blas_uninit::array_axcpy (309 samples, 2.16%)</title><rect x="63.8926%" y="293" width="2.1556%" height="15" fill="rgb(239,43,17)" fg:x="9159" fg:w="309"/><text x="64.1426%" y="303.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (24 samples, 0.17%)</title><rect x="65.8807%" y="277" width="0.1674%" height="15" fill="rgb(231,177,25)" fg:x="9444" fg:w="24"/><text x="66.1307%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (24 samples, 0.17%)</title><rect x="65.8807%" y="261" width="0.1674%" height="15" fill="rgb(219,179,1)" fg:x="9444" fg:w="24"/><text x="66.1307%" y="271.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (16 samples, 0.11%)</title><rect x="66.1388%" y="389" width="0.1116%" height="15" fill="rgb(238,219,53)" fg:x="9481" fg:w="16"/><text x="66.3888%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Div&gt;::div (32 samples, 0.22%)</title><rect x="66.2504%" y="389" width="0.2232%" height="15" fill="rgb(232,167,36)" fg:x="9497" fg:w="32"/><text x="66.5004%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (12 samples, 0.08%)</title><rect x="66.4737%" y="389" width="0.0837%" height="15" fill="rgb(244,19,51)" fg:x="9529" fg:w="12"/><text x="66.7237%" y="399.50"></text></g><g><title>&lt;f32 as num_traits::identities::Zero&gt;::is_zero (10 samples, 0.07%)</title><rect x="66.5574%" y="389" width="0.0698%" height="15" fill="rgb(224,6,22)" fg:x="9541" fg:w="10"/><text x="66.8074%" y="399.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (75 samples, 0.52%)</title><rect x="66.6271%" y="389" width="0.5232%" height="15" fill="rgb(224,145,5)" fg:x="9551" fg:w="75"/><text x="66.8771%" y="399.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (75 samples, 0.52%)</title><rect x="66.6271%" y="373" width="0.5232%" height="15" fill="rgb(234,130,49)" fg:x="9551" fg:w="75"/><text x="66.8771%" y="383.50"></text></g><g><title>nalgebra::linalg::givens::GivensRotation&lt;T&gt;::cancel_y (193 samples, 1.35%)</title><rect x="66.0481%" y="405" width="1.3464%" height="15" fill="rgb(254,6,2)" fg:x="9468" fg:w="193"/><text x="66.2981%" y="415.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::to_exp (35 samples, 0.24%)</title><rect x="67.1503%" y="389" width="0.2442%" height="15" fill="rgb(208,96,46)" fg:x="9626" fg:w="35"/><text x="67.4003%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1,209 samples, 8.43%)</title><rect x="71.0638%" y="389" width="8.4339%" height="15" fill="rgb(239,3,39)" fg:x="10187" fg:w="1209"/><text x="71.3138%" y="399.50">&lt;f32 as core..</text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (791 samples, 5.52%)</title><rect x="79.4977%" y="389" width="5.5180%" height="15" fill="rgb(233,210,1)" fg:x="11396" fg:w="791"/><text x="79.7477%" y="399.50">&lt;f32 as..</text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::scale (674 samples, 4.70%)</title><rect x="85.0157%" y="389" width="4.7018%" height="15" fill="rgb(244,137,37)" fg:x="12187" fg:w="674"/><text x="85.2657%" y="399.50">&lt;f32 ..</text></g><g><title>nalgebra::linalg::givens::GivensRotation&lt;T&gt;::rotate (3,717 samples, 25.93%)</title><rect x="67.3945%" y="405" width="25.9295%" height="15" fill="rgb(240,136,2)" fg:x="9661" fg:w="3717"/><text x="67.6445%" y="415.50">nalgebra::linalg::givens::GivensRotation&lt;..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (517 samples, 3.61%)</title><rect x="89.7175%" y="389" width="3.6066%" height="15" fill="rgb(239,18,37)" fg:x="12861" fg:w="517"/><text x="89.9675%" y="399.50">core..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (517 samples, 3.61%)</title><rect x="89.7175%" y="373" width="3.6066%" height="15" fill="rgb(218,185,22)" fg:x="12861" fg:w="517"/><text x="89.9675%" y="383.50">&lt;cor..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (176 samples, 1.23%)</title><rect x="92.0963%" y="357" width="1.2278%" height="15" fill="rgb(225,218,4)" fg:x="13202" fg:w="176"/><text x="92.3463%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (176 samples, 1.23%)</title><rect x="92.0963%" y="341" width="1.2278%" height="15" fill="rgb(230,182,32)" fg:x="13202" fg:w="176"/><text x="92.3463%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (285 samples, 1.99%)</title><rect x="95.7028%" y="389" width="1.9881%" height="15" fill="rgb(242,56,43)" fg:x="13719" fg:w="285"/><text x="95.9528%" y="399.50">&lt;..</text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::scale (8 samples, 0.06%)</title><rect x="97.6910%" y="389" width="0.0558%" height="15" fill="rgb(233,99,24)" fg:x="14004" fg:w="8"/><text x="97.9410%" y="399.50"></text></g><g><title>nalgebra::linalg::givens::GivensRotation&lt;T&gt;::rotate_rows (694 samples, 4.84%)</title><rect x="93.3240%" y="405" width="4.8413%" height="15" fill="rgb(234,209,42)" fg:x="13378" fg:w="694"/><text x="93.5740%" y="415.50">nalgeb..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (60 samples, 0.42%)</title><rect x="97.7468%" y="389" width="0.4186%" height="15" fill="rgb(227,7,12)" fg:x="14012" fg:w="60"/><text x="97.9968%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (60 samples, 0.42%)</title><rect x="97.7468%" y="373" width="0.4186%" height="15" fill="rgb(245,203,43)" fg:x="14012" fg:w="60"/><text x="97.9968%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (38 samples, 0.27%)</title><rect x="97.9002%" y="357" width="0.2651%" height="15" fill="rgb(238,205,33)" fg:x="14034" fg:w="38"/><text x="98.1502%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (38 samples, 0.27%)</title><rect x="97.9002%" y="341" width="0.2651%" height="15" fill="rgb(231,56,7)" fg:x="14034" fg:w="38"/><text x="98.1502%" y="351.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::norm1 (4 samples, 0.03%)</title><rect x="98.2490%" y="389" width="0.0279%" height="15" fill="rgb(244,186,29)" fg:x="14084" fg:w="4"/><text x="98.4990%" y="399.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (4 samples, 0.03%)</title><rect x="98.2490%" y="373" width="0.0279%" height="15" fill="rgb(234,111,31)" fg:x="14084" fg:w="4"/><text x="98.4990%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (10 samples, 0.07%)</title><rect x="98.2769%" y="389" width="0.0698%" height="15" fill="rgb(241,149,10)" fg:x="14088" fg:w="10"/><text x="98.5269%" y="399.50"></text></g><g><title>nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::new_unordered (7,793 samples, 54.36%)</title><rect x="43.9972%" y="437" width="54.3634%" height="15" fill="rgb(249,206,44)" fg:x="6307" fg:w="7793"/><text x="44.2472%" y="447.50">nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::new_unordered</text></g><g><title>nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::try_new_unordered (7,793 samples, 54.36%)</title><rect x="43.9972%" y="421" width="54.3634%" height="15" fill="rgb(251,153,30)" fg:x="6307" fg:w="7793"/><text x="44.2472%" y="431.50">nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::try_new_unordered</text></g><g><title>nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::delimit_subproblem (28 samples, 0.20%)</title><rect x="98.1653%" y="405" width="0.1953%" height="15" fill="rgb(239,152,38)" fg:x="14072" fg:w="28"/><text x="98.4153%" y="415.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (2 samples, 0.01%)</title><rect x="98.3467%" y="389" width="0.0140%" height="15" fill="rgb(249,139,47)" fg:x="14098" fg:w="2"/><text x="98.5967%" y="399.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::index::Index&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (2 samples, 0.01%)</title><rect x="98.3467%" y="373" width="0.0140%" height="15" fill="rgb(244,64,35)" fg:x="14098" fg:w="2"/><text x="98.5967%" y="383.50"></text></g><g><title>core::intrinsics::copy (12 samples, 0.08%)</title><rect x="98.3676%" y="325" width="0.0837%" height="15" fill="rgb(216,46,15)" fg:x="14101" fg:w="12"/><text x="98.6176%" y="335.50"></text></g><g><title>gamm::baseline_single::beta_coocurring_amm (14,108 samples, 98.42%)</title><rect x="0.0767%" y="485" width="98.4165%" height="15" fill="rgb(250,74,19)" fg:x="11" fg:w="14108"/><text x="0.3267%" y="495.50">gamm::baseline_single::beta_coocurring_amm</text></g><g><title>nalgebra::linalg::decomposition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::svd (7,812 samples, 54.50%)</title><rect x="43.9972%" y="469" width="54.4960%" height="15" fill="rgb(249,42,33)" fg:x="6307" fg:w="7812"/><text x="44.2472%" y="479.50">nalgebra::linalg::decomposition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::svd</text></g><g><title>nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::new (7,812 samples, 54.50%)</title><rect x="43.9972%" y="453" width="54.4960%" height="15" fill="rgb(242,149,17)" fg:x="6307" fg:w="7812"/><text x="44.2472%" y="463.50">nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::new</text></g><g><title>nalgebra::linalg::svd::SVD&lt;T,R,C&gt;::sort_by_singular_values (19 samples, 0.13%)</title><rect x="98.3607%" y="437" width="0.1325%" height="15" fill="rgb(244,29,21)" fg:x="14100" fg:w="19"/><text x="98.6107%" y="447.50"></text></g><g><title>nalgebra::linalg::permutation_sequence::PermutationSequence&lt;D&gt;::permute_rows (18 samples, 0.13%)</title><rect x="98.3676%" y="421" width="0.1256%" height="15" fill="rgb(220,130,37)" fg:x="14101" fg:w="18"/><text x="98.6176%" y="431.50"></text></g><g><title>nalgebra::base::edition::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::swap_rows (18 samples, 0.13%)</title><rect x="98.3676%" y="405" width="0.1256%" height="15" fill="rgb(211,67,2)" fg:x="14101" fg:w="18"/><text x="98.6176%" y="415.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::swap_unchecked (18 samples, 0.13%)</title><rect x="98.3676%" y="389" width="0.1256%" height="15" fill="rgb(235,68,52)" fg:x="14101" fg:w="18"/><text x="98.6176%" y="399.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked (18 samples, 0.13%)</title><rect x="98.3676%" y="373" width="0.1256%" height="15" fill="rgb(246,142,3)" fg:x="14101" fg:w="18"/><text x="98.6176%" y="383.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::swap_unchecked_linear (18 samples, 0.13%)</title><rect x="98.3676%" y="357" width="0.1256%" height="15" fill="rgb(241,25,7)" fg:x="14101" fg:w="18"/><text x="98.6176%" y="367.50"></text></g><g><title>core::ptr::swap (18 samples, 0.13%)</title><rect x="98.3676%" y="341" width="0.1256%" height="15" fill="rgb(242,119,39)" fg:x="14101" fg:w="18"/><text x="98.6176%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.04%)</title><rect x="98.4513%" y="325" width="0.0419%" height="15" fill="rgb(241,98,45)" fg:x="14113" fg:w="6"/><text x="98.7013%" y="335.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact::{{closure}} (9 samples, 0.06%)</title><rect x="99.4419%" y="421" width="0.0628%" height="15" fill="rgb(254,28,30)" fg:x="14255" fg:w="9"/><text x="99.6919%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (9 samples, 0.06%)</title><rect x="99.4419%" y="405" width="0.0628%" height="15" fill="rgb(241,142,54)" fg:x="14255" fg:w="9"/><text x="99.6919%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.06%)</title><rect x="99.4419%" y="389" width="0.0628%" height="15" fill="rgb(222,85,15)" fg:x="14255" fg:w="9"/><text x="99.6919%" y="399.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (49 samples, 0.34%)</title><rect x="99.3722%" y="453" width="0.3418%" height="15" fill="rgb(210,85,47)" fg:x="14245" fg:w="49"/><text x="99.6222%" y="463.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume_with (49 samples, 0.34%)</title><rect x="99.3722%" y="437" width="0.3418%" height="15" fill="rgb(224,206,25)" fg:x="14245" fg:w="49"/><text x="99.6222%" y="447.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::buffer (30 samples, 0.21%)</title><rect x="99.5047%" y="421" width="0.2093%" height="15" fill="rgb(243,201,19)" fg:x="14264" fg:w="30"/><text x="99.7547%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.02%)</title><rect x="99.6931%" y="405" width="0.0209%" height="15" fill="rgb(236,59,4)" fg:x="14291" fg:w="3"/><text x="99.9431%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.02%)</title><rect x="99.6931%" y="389" width="0.0209%" height="15" fill="rgb(254,179,45)" fg:x="14291" fg:w="3"/><text x="99.9431%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.06%)</title><rect x="99.7140%" y="453" width="0.0558%" height="15" fill="rgb(226,14,10)" fg:x="14294" fg:w="8"/><text x="99.9640%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.06%)</title><rect x="99.7140%" y="437" width="0.0558%" height="15" fill="rgb(244,27,41)" fg:x="14294" fg:w="8"/><text x="99.9640%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8 samples, 0.06%)</title><rect x="99.7140%" y="421" width="0.0558%" height="15" fill="rgb(235,35,32)" fg:x="14294" fg:w="8"/><text x="99.9640%" y="431.50"></text></g><g><title>all (14,335 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(218,68,31)" fg:x="0" fg:w="14335"/><text x="0.2500%" y="799.50"></text></g><g><title>single_amm (14,335 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(207,120,37)" fg:x="0" fg:w="14335"/><text x="0.2500%" y="783.50">single_amm</text></g><g><title>_start (14,324 samples, 99.92%)</title><rect x="0.0767%" y="757" width="99.9233%" height="15" fill="rgb(227,98,0)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="767.50">_start</text></g><g><title>__libc_start_main (14,324 samples, 99.92%)</title><rect x="0.0767%" y="741" width="99.9233%" height="15" fill="rgb(207,7,3)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="751.50">__libc_start_main</text></g><g><title>[libc.so.6] (14,324 samples, 99.92%)</title><rect x="0.0767%" y="725" width="99.9233%" height="15" fill="rgb(206,98,19)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="735.50">[libc.so.6]</text></g><g><title>main (14,324 samples, 99.92%)</title><rect x="0.0767%" y="709" width="99.9233%" height="15" fill="rgb(217,5,26)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="719.50">main</text></g><g><title>std::rt::lang_start_internal (14,324 samples, 99.92%)</title><rect x="0.0767%" y="693" width="99.9233%" height="15" fill="rgb(235,190,38)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="703.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (14,324 samples, 99.92%)</title><rect x="0.0767%" y="677" width="99.9233%" height="15" fill="rgb(247,86,24)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="687.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (14,324 samples, 99.92%)</title><rect x="0.0767%" y="661" width="99.9233%" height="15" fill="rgb(205,101,16)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="671.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,324 samples, 99.92%)</title><rect x="0.0767%" y="645" width="99.9233%" height="15" fill="rgb(246,168,33)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="655.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (14,324 samples, 99.92%)</title><rect x="0.0767%" y="629" width="99.9233%" height="15" fill="rgb(231,114,1)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="639.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (14,324 samples, 99.92%)</title><rect x="0.0767%" y="613" width="99.9233%" height="15" fill="rgb(207,184,53)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="623.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (14,324 samples, 99.92%)</title><rect x="0.0767%" y="597" width="99.9233%" height="15" fill="rgb(224,95,51)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="607.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,324 samples, 99.92%)</title><rect x="0.0767%" y="581" width="99.9233%" height="15" fill="rgb(212,188,45)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="591.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (14,324 samples, 99.92%)</title><rect x="0.0767%" y="565" width="99.9233%" height="15" fill="rgb(223,154,38)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="575.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (14,324 samples, 99.92%)</title><rect x="0.0767%" y="549" width="99.9233%" height="15" fill="rgb(251,22,52)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="559.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14,324 samples, 99.92%)</title><rect x="0.0767%" y="533" width="99.9233%" height="15" fill="rgb(229,209,22)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="543.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (14,324 samples, 99.92%)</title><rect x="0.0767%" y="517" width="99.9233%" height="15" fill="rgb(234,138,34)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="527.50">core::ops::function::FnOnce::call_once</text></g><g><title>single_amm::main (14,324 samples, 99.92%)</title><rect x="0.0767%" y="501" width="99.9233%" height="15" fill="rgb(212,95,11)" fg:x="11" fg:w="14324"/><text x="0.3267%" y="511.50">single_amm::main</text></g><g><title>gamm::load_matrices (216 samples, 1.51%)</title><rect x="98.4932%" y="485" width="1.5068%" height="15" fill="rgb(240,179,47)" fg:x="14119" fg:w="216"/><text x="98.7432%" y="495.50"></text></g><g><title>gamm::load_matrix (216 samples, 1.51%)</title><rect x="98.4932%" y="469" width="1.5068%" height="15" fill="rgb(240,163,11)" fg:x="14119" fg:w="216"/><text x="98.7432%" y="479.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;&gt;::Buffer&gt;&gt;::zeros (33 samples, 0.23%)</title><rect x="99.7698%" y="453" width="0.2302%" height="15" fill="rgb(236,37,12)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="463.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::zeros_generic (33 samples, 0.23%)</title><rect x="99.7698%" y="437" width="0.2302%" height="15" fill="rgb(232,164,16)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="447.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_element_generic (33 samples, 0.23%)</title><rect x="99.7698%" y="421" width="0.2302%" height="15" fill="rgb(244,205,15)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="431.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_iterator_generic (33 samples, 0.23%)</title><rect x="99.7698%" y="405" width="0.2302%" height="15" fill="rgb(223,117,47)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="415.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Dynamic,C&gt;&gt;::allocate_from_iterator (33 samples, 0.23%)</title><rect x="99.7698%" y="389" width="0.2302%" height="15" fill="rgb(244,107,35)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (33 samples, 0.23%)</title><rect x="99.7698%" y="373" width="0.2302%" height="15" fill="rgb(205,140,8)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (33 samples, 0.23%)</title><rect x="99.7698%" y="357" width="0.2302%" height="15" fill="rgb(228,84,46)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 0.23%)</title><rect x="99.7698%" y="341" width="0.2302%" height="15" fill="rgb(254,188,9)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (33 samples, 0.23%)</title><rect x="99.7698%" y="325" width="0.2302%" height="15" fill="rgb(206,112,54)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (33 samples, 0.23%)</title><rect x="99.7698%" y="309" width="0.2302%" height="15" fill="rgb(216,84,49)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (33 samples, 0.23%)</title><rect x="99.7698%" y="293" width="0.2302%" height="15" fill="rgb(214,194,35)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.23%)</title><rect x="99.7698%" y="277" width="0.2302%" height="15" fill="rgb(249,28,3)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (33 samples, 0.23%)</title><rect x="99.7698%" y="261" width="0.2302%" height="15" fill="rgb(222,56,52)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (33 samples, 0.23%)</title><rect x="99.7698%" y="245" width="0.2302%" height="15" fill="rgb(245,217,50)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (33 samples, 0.23%)</title><rect x="99.7698%" y="229" width="0.2302%" height="15" fill="rgb(213,201,24)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="239.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (33 samples, 0.23%)</title><rect x="99.7698%" y="213" width="0.2302%" height="15" fill="rgb(248,116,28)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="223.50"></text></g><g><title>core::ops::function::Fn::call (33 samples, 0.23%)</title><rect x="99.7698%" y="197" width="0.2302%" height="15" fill="rgb(219,72,43)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="207.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (33 samples, 0.23%)</title><rect x="99.7698%" y="181" width="0.2302%" height="15" fill="rgb(209,138,14)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (33 samples, 0.23%)</title><rect x="99.7698%" y="165" width="0.2302%" height="15" fill="rgb(222,18,33)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (33 samples, 0.23%)</title><rect x="99.7698%" y="149" width="0.2302%" height="15" fill="rgb(213,199,7)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="159.50"></text></g><g><title>core::ptr::write (33 samples, 0.23%)</title><rect x="99.7698%" y="133" width="0.2302%" height="15" fill="rgb(250,110,10)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="143.50"></text></g><g><title>[libc.so.6] (33 samples, 0.23%)</title><rect x="99.7698%" y="117" width="0.2302%" height="15" fill="rgb(248,123,6)" fg:x="14302" fg:w="33"/><text x="100.0198%" y="127.50"></text></g></svg></svg>